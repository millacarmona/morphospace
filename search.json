[{"path":"https://millacarmona.github.io/morphospace/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 morphospace authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://millacarmona.github.io/morphospace/articles/General-usage.html","id":"ordination-methods","dir":"Articles","previous_headings":"","what":"Ordination methods","title":"General usage","text":"default settings mspace rely prcomp function stats package build synthetic morphometric space. However, morphospace also includes functions supervised ordination, namely phylogenetic PCA (Revell 2009; borrowed phytools, Revell 2012), -groups PCA (bg_prcomp), ordinary phylgenetic versions Partial Least Squares (PLS) (pls_shapes [user-friendly wrapper pls2b, used following chunk]). styled/wrapped share format prcomp, bgPCA PLS functions allow leave-one-cross-validation (LOOCV), alleviates spurious patterns arise number variables exceeds number samples (common geometric morphometric analyses; see Cardini et al. 2019 Cardini & Polly 2020).  methods can used instead regular PCA building morphospaces via FUN ... arguments (adding argument groups bg_prcomp, tree phy_prcomp, X [potentially also tree] pls_shapes) mspace function. resulting morphospace can combined proj_* functions way ; also take advantage graphics tools bit margin manipulation add legend.   Finally, \"mspace\" objects created using mspace %>% proj_* pipeline can regenerated/modified plot_mspace, adds graphical flexibility. plotting \"mspace\" object using function can select different set axes plot, colors symbols points, groups, etc (). addition, function can also allow combining morphometric axes non-shape variables produce ‘hybrid’ morphospaces. example, PC1 can plotted size explore allometric patterns:  can combine PC2 phylogenetic tree create phenogram:","code":"# Simulate 100 random normal distributions, and add an artificial classification and # an artificial covariate set.seed(123) random_y <- do.call(\"cbind\", lapply(1:100, function(i) {rnorm(90)})) class <- factor(rep(c(\"A\", \"B\", \"C\"), each = 30)) random_x <- rnorm(90)   # Perform bgPCA on the set of random variables to look for the bgPCs maximizing separation # between artificial groups, with and without LOOCV layout(rbind(c(1,2), c(3,4))) bgpca1 <- bg_prcomp(x = random_y, groups = class) plot(bgpca1$x, col = c(1:3)[class]) hulls_by_group_2D(bgpca1$x, class) title(\"bgPCA\\n without LOOCV\")   bgpca2 <- bg_prcomp(x = random_y, groups = class, LOOCV = TRUE) plot(bgpca2$x, col = c(1:3)[class]) hulls_by_group_2D(bgpca2$x, class) title(\"bgPCA\\n with LOOCV\")   # Perform PLS on the set of random variables to look for the PLS axis maximzing covariation # between them and the artificial covariate, with and without LOOCV pls1 <- pls2b(x = random_x, y = random_y) plot(pls1$xscores, pls1$yscores) abline(lm(pls1$yscores ~ pls1$xscores), col = \"red\") title(\"PLS\\n without LOOCV\")   pls2 <- pls2b(x = random_x, y = random_y, LOOCV = TRUE) plot(pls2$xscores, pls2$yscores) abline(lm(pls2$yscores ~ pls2$xscores), col = \"red\") title(\"PLS\\n with LOOCV\") # Between group PCA - all species (invert both axes for easier comparison with previous  # plots), add legend par(mar = c(5.1, 4.1, 4.1, 6), xpd = TRUE) mspace(detr_shapes, FUN = bg_prcomp, LOOCV = TRUE, groups = spp,        links = wf, invax = c(1,2), cex.ldm = 5) %>%   proj_shapes(shapes = detr_shapes, col = spp) %>%   proj_groups(shapes = detr_shapes, groups = spp) title(\"Morphospace emphasizing interspecific variation\") legend(\"topright\", inset = c(-0.22, 0), legend = levels(spp),         cex = 0.7, pch = 16, col = 1:nlevels(spp), bty = \"n\", text.font = 3) # Phylogenetic PCA for all species, adding projection of intrapspecific variation, # add legend par(mar = c(5.1, 4.1, 4.1, 6), xpd = TRUE) mspace(sp_shapes, FUN = phy_prcomp, tree = phy, links = wf,        xlim = c(-0.25, 0.15), ylim = c(-0.2, 0.15), cex.ldm = 5) %>%   proj_shapes(shapes = detr_shapes, col = spp) %>%   proj_groups(shapes = detr_shapes, groups = spp) %>%   proj_consensus(shapes = sp_shapes, col = \"black\", pch = 16) %>%   proj_phylogeny(tree = phy, pch = 16) title(\"Phylogenetic morphospace\\n+ samples\") legend(\"topright\", inset = c(-0.22, 0), legend = levels(spp),         cex = 0.7, pch = 16, col = 1:nlevels(spp), bty = \"n\", text.font = 3) # Plot PC1 against log-size, add legend par(mar = c(5.1, 4.1, 4.1, 6), xpd = TRUE)  plot_mspace(msp3, x = sizes, axes = 1, nh = 6, nv = 6, cex.ldm = 4,              col.points = spp, col.groups = 1:nlevels(spp), xlab = \"Log-size\", groups = TRUE) legend(\"topright\", inset = c(-0.22, 0), legend = levels(spp),         cex = 0.7, pch = 16, col = 1:nlevels(spp), bty = \"n\", text.font = 3) # Plot vertical phenogram using PC2, add a legend par(mar = c(5.1, 4.1, 4.1, 6), xpd = TRUE)  plot_mspace(msp3, y = phy, axes = 2, nh = 6, nv = 6, cex.ldm = 4,              col.groups = 1:nlevels(spp), ylab = \"Time\") legend(\"topright\", inset = c(-0.22, 0), legend = levels(spp),         cex = 0.7, pch = 16, col = 1:nlevels(spp), bty = \"n\", text.font = 3)"},{"path":"https://millacarmona.github.io/morphospace/articles/General-usage.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"General usage","text":"Adams D.C., Collyer M.L., Kaliontzopoulou ., & Baken E.K. (2021). geomorph: Software geometric morphometric analyses. R package version 4.0.2. https://cran.r-project.org/package=geomorph. Bache S.F., & Wickham H. (2022). magrittr: Forward-Pipe Operator R. R package version 2.0.3. https://CRAN.R-project.org/package=magrittr. Bonhomme V., Picq S., Gaucherel C., & Claude J. (2014). Momocs: Outline Analysis Using R. Journal Statistical Software, 56(13), 1-24. http://www.jstatsoft.org/v56/i13/. Cardini ., O’Higgins P., & Rohlf F.J. (2019). Seeing distinct groups none: spurious patterns -group PCA. Evolutionary Biology, 46(4), 303-316. https://doi.org/10.1007/s11692-019-09487-5. Cardini ., & Polly P. D. (2020). Cross-validated group PCA scatterplots: solution spurious group separation?. Evolutionary Biology, 47(1), 85-95. https://doi.org/10.1007/s11692-020-09494-x. Dryden, .L. (2019). shapes: statistical shape analysis. R package version 1.2.5. https://CRAN.R-project.org/package=shapes. Fasanelli M.N., Milla Carmona P.S., Soto .M., & Tuero, D.T. (2022). Allometry, sexual selection evolutionary lines least resistance shaped evolution exaggerated sexual traits within genus Tyrannus. Journal Evolutionary Biology, press. https://doi.org/10.1111/jeb.14000. Revell, L.J. (2009). Size-correction principal components interspecific comparative studies. Evolution, 63, 3258-3268 https://doi.org/10.1111/j.1558-5646.2009.00804.x. Revell, L.J. (2012). phytools: R package phylogenetic comparative biology (things). Methods Ecology Evolution 3, 217-223. https://doi.org/10.1111/j.2041-210X.2011.00169.x. Schlager S. (2017). Morpho Rvcg - Shape Analysis R. Zheng G., Li S., Szekely G. (eds.), Statistical Shape Deformation Analysis, 217-256. Academic Press. https://doi.org/10.1016/B978-0-12-810493-4.00011-0.","code":""},{"path":"https://millacarmona.github.io/morphospace/articles/Worked-examples.html","id":"d-landmark-data","dir":"Articles","previous_headings":"","what":"2D Landmark data","title":"Worked examples","text":"capabilities 2D landmark data visualization already covered ‘General usage’ vignette. section quickly show use curve set curves outlining aspects phenotype captured chosen landmarks improve visualizations via TPS interpolation. use wings data set, taken Soto et al. (2012) includes wing shape data 263 experimentally bred specimens belonging two recently diverged cactophilic Drosophila species, D. koepferae D. buzzattii. two species show preference different host cacti (columnar cacti genus Trichocereus prickly pears genus Opuntia, respectively) considered morphologically cryptic (usually, can recognized genital morphology). data set include centroid size wing, well information host cacti specimen bred , species, sex, isofemale line, replica. Also included template containing series curves describing wing outline veins (created using build_template2d), warped using TPS interpolation used generate fancy shape models morphospace.   Assume second interested exploring whether can identify morphological differences species, well interspecific differences effect host cacti. pattern seeing suggets variation wing morphology subtle, wings two species basically indistinguishable, cactus large effect wing morphology. However, lot ‘noise’ (.e. sexual dimorphism, allometric variation, genetic variation, etc) can get rid using detrend_shapes. can also use mag argument magnify variation can easily interpreted. Finally, can also extract morphometric axes describing -cacti variation within species using bg_prcomp, project see show major changes orientation:  , ‘cleaning’ raw variation interspecific differences become apparent species occupying different regions wing morphospace (elongated triangular D. koepferae, relatively higher rounded D. buzzattii). Also, morphological variation asssociated host cacti seems similar species (projected axes largely parallel), although D. buzzattii shows marked differentiation flies bred Opuntia displaced region rounded wings.","code":"# Load morphospace as well as geomorph and magrittr library(morphospace) library(geomorph) library(magrittr) # Load wing data and extract shapes, centroid sizes, classification of sex and species, # links between landmarks, template, and phylogenetic tree data(\"wings\")  shapes <- wings$shapes sizes <- log(wings$sizes) species <- wings$data$species cactus <- wings$data$cactus line <- wings$data$line sex <- wings$data$sex replica <- wings$data$replica curvs <- wings$template   # Inspect shapes using links pile_shapes(shapes, wings$links) # Generate morphospace but use warped wings as background models mspace(shapes, template = curvs, col.ldm = \"red\", cex.ldm = 5) %>%   proj_shapes(shapes = shapes, col = c(\"blue\", \"orange\")[species], pch = c(1,16)[cactus]) %>%   proj_groups(groups = species, col = c(\"blue\", \"orange\")) title(\"Morphospace using template\") # Remove variationassociated to sex, line, replica and size detr_shapes <- arrayspecs(   detrend_shapes(lm(two.d.array(shapes) ~ sex * line * replica * sizes)),    p = 9, k = 2)   # Compute between-cactus axis for each species  between_cactus_db <- bg_prcomp(x = two.d.array(detr_shapes[,,species == \"Db\"]),                                 groups = cactus[species == \"Db\"]) between_cactus_dk <- bg_prcomp(x = two.d.array(detr_shapes[,,species == \"Dk\"]),                                 groups = cactus[species == \"Dk\"])   # Generate morphospace using the refined variation, magnify transformation omar <- par(\"mar\") par(mar = c(5.1, 4.1, 4.1, 6), xpd = TRUE)  mspace(detr_shapes, template = curvs, col.ldm = \"red\", cex.ldm = 5, mag = 3) %>%   proj_shapes(shapes = detr_shapes, col = c(\"blue\", \"orange\")[species], pch = c(1,16)[cactus]) %>%   proj_groups(groups = species:cactus,                col = rep(c(\"blue\", \"orange\"), each= 2), lty = rep(c(2,1), 2)) %>%   proj_axis(obj = between_cactus_db, col = c(\"blue\"), lwd = 2) %>%   proj_axis(obj = between_cactus_dk, col = c(\"orange\"), lwd = 2)  legend(\"topright\", inset = c(-0.19, 0), legend = c(\"D. buzzattii\", \"D. koepferae\"),         cex = 0.7, pch = 16, col = c(\"blue\", \"orange\"), bty = \"n\", text.font = 3) legend(\"topright\", inset = c(-0.2, 0.2), legend = c(\"Opuntia\", \"Trichocereus\"),         cex = 0.7, pch = c(1, 16), bty = \"n\", text.font = 3) title(\"'Refined' morphospace using template\\n+ between-cacti axes\")"},{"path":"https://millacarmona.github.io/morphospace/articles/Worked-examples.html","id":"closed-outlines","dir":"Articles","previous_headings":"","what":"Closed outlines","title":"Worked examples","text":"morphospace can also handle closed outline data form Fourier coefficients resulting elliptic Fourier analysis. purposes import, normalize analize data rely Momocs package, use \"OutCoe\" format storing closed outlines starting point. mspace %>% proj_* workflow applied shells data set taken Milla Carmona et al. (2018). include data 137 specimens belonging 4 species extinct bivalve genus Ptychomya, tracking shape changes 5 million years interval Lower Cretaceous Argentina. data set includes information shape (measured using 7 harmonics), centroid size, geochronologic age (relative absolute), geographic provenance, taxonomic classification specimen.   case, might interested anagenetic variation shown species throughout studied interval. , can use detrend_shapes remove variation associated nuisance factors (geographic provenance allometric variation). species separately, use consensus extract mean shape sample. (Note: two step process good reason: use detrend_shapes detrend shape variation, grand mean used default new mean shape sample; however specifying value level x model xvalue argument, can use new value mean shape ‘detrended’ shape variation. case, analitically displacing shells shape attained species’ maximum size). (Also, note don’t need arrayspecs using detrend_shapes , ’s Fourier coefficients already stored matrix format). Now can use plot_mspace create complex hybrid plot combining shape changes associated PC1 time axis. , bit variable manipulation first obtain classification specimen combination (relative) age species, build morphospace, use plot_mspace plot geochronologic age shape. Finally, calculate (absolute) ages combination, bind groups means, order use depict mean shape changes species time:  plots can say , regarding shell outline, 1) P esbelta rather different rest species, 2) P coihuicoensis P. windhauseni similar , 3) species show little net change stratigraphic span (words seem morphological stasis), exception P. windhauseni show short noticeable directional trend towards higher shells.","code":"#Load Momocs library(Momocs)  # Load data from shells, extract shapes, sizes and classification into species, absolute and relative # age and locality data(\"shells\")  shapes <- shells$shapes$coe sizes <- log(shells$sizes) species <- shells$data$species ages <- shells$data$age bzones <- shells$data$zone locality <- shells$data$locality   # Pile shapes pile_shapes(shapes) # Generate morphospace using raw variation mspace(shapes, mag = 1, axes = c(1,2), nh = 5, nv = 4, bg.model = \"light gray\") %>%   proj_shapes(shapes = shapes, col = species) %>%   proj_groups(shapes = shapes, groups = species) title(\"Morphospace\") # 'Clean' shapes separately for each species, removing 1) variation associated # to geographic provenance and 2) allometric variation detr_shapes <- shapes * 0 for(i in 1:nlevels(species)) {   index <- species == levels(species)[i]    submod_loc <- lm(shapes[index,] ~ factor(locality[index]))   detr_shapes0 <- detrend_shapes(submod_loc)    submod_siz <- lm(detr_shapes0 ~ sizes[index])   subdetr_shapes1 <- detrend_shapes(submod_siz, xvalue = max(sizes[index]))    detr_shapes[rownames(detr_shapes) %in% rownames(subdetr_shapes1),] <- subdetr_shapes1 }   # Compute mean shapes sp_shapes <- consensus(detr_shapes, species) # Combine species and biozones factors, then compute the mean shapes of the resulting # groups sp.bz <- factor(species:bzones) mshapes_agesxspecies <- consensus(shapes, sp.bz)   # Generate morphospace msp <- mspace(shapes, nh = 5, nv = 4, bg.model = \"light gray\") %>%   proj_shapes(shapes = shapes) %>%   proj_consensus(shapes = mshapes_agesxspecies) %>%   proj_groups(shapes = shapes, groups = sp.bz) # Plot time axis vs first PC, add legend omar <- par(\"mar\") par(mar = c(5.1, 4.1, 4.1, 6), xpd = TRUE)  plot_mspace(mspace = msp, x = ages, axes = 1, nh = 5, nv = 4, xlab = \"Time (MA)\",             col.points = species,  phylo = FALSE, groups = FALSE, mshapes = TRUE) # Compute and arrange absolute ages for each group, then use it to add and connect mean shapes xy <- cbind(tapply(ages, sp.bz, mean), msp$gr_centroids[,1]) xy <- xy[order(xy[,1]),] for(i in 1:4) {   index <- grepl(x = rownames(xy), pattern = levels(species)[i])   lines(xy[index,], col = i, lwd = 2)   points(xy[index,], pch = 21, bg = i) } title(' \"Stratomorphospace\" ') legend(\"topright\", inset = c(-0.22, 0), legend = paste0(\"P. \", levels(species)),         cex = 0.7, pch = 16, col = 1:nlevels(species), bty = \"n\", text.font = 3)"},{"path":"https://millacarmona.github.io/morphospace/articles/Worked-examples.html","id":"d-landmark-data-1","dir":"Articles","previous_headings":"","what":"3D Landmark data","title":"Worked examples","text":"Last least, morphospace can also deal 3D landmark data (personal preference importing normalizing 3D landmark data functions Morpho, packages can ). show apply mspace %>% proj_* workflow use shells3D data set taken Milla Carmona et al. (2021), gathers longitudinal ontogenetic data 67 specimens belonging 7 species extinct bivalve genus Steinmanella Lower Cretaceous Argentina. shape specimens registered different sizes using growth lines, data set includes total 278 shapes quantified using 90 surface semilandmarks. Also included corresponding centroid sizes, id specimen shape taken , information biostratigraphic age, taxonomic classification geographic provenance specimen. surface mesh corresponding specimen closest consensus sample (found using geomorph::findMeanSpec) also included. rgl package (Murduch & Adler 2021) responsible depiction 3D models, imposes important differences way morphospace functions work. importantly, time mspace plot_mspace called, rgl device pop user asked rotate reference shape desired orientation. close minimize window, just expand /rotate zoom /model go console hit Enter directly. start loading relevant packages set rotation matrix rgl models (wouldn’t normally need step, since rotate device knitting becomes necessary. However can also useful use workflow , don’t need worry finding exactly orientation .)  can now focus ontogenetic shape variation, intention data set built. resort detrend shapes remove variation coming undesired sources (case bostratigraphic age, geographic provenance , especialy, individual differneces) 2D landmarks can include template improve interpretability, although case template 3D surface mesh. can slow process bit, especially ask many models use transparent meshes. template used must mesh corresponding mean shape sample, needs computed beforehand (shells3D data set includes mesh corresponding specimen closest consensus, can warped using Morpho::tps3d obtain mean mesh, shown next chunk). got rid noise template prepared, use refined shapes compute ontogenetic allometric axis species using pls_shapes. , use former generate morphospace project latter, using 3D meshes background shape models.  use plot_mspace plot allometric axis (computed PLS shape size entire sample, rather species-wise). can use R machinery add extra elements, case values expected linear regression shape log-size.  quick assessment plots tells us two main groups ontogenies: S. quintucoensis S. subquadrata (go roughly quadrate shells expanded posteriors rectangular shells) rest species, whose ontogenetic trajectories seem similar terms orientation magnitude (go oval-like shells triangular ones, although position trajectory differs). exception S. vacaensis, show protracted trajectory reach elongated shell shapes. also apparent common trend one anteroposterior elongation, seems marked two species reaching larger sizes (S. pehuenmapuensis S. vacaensis).","code":"# Load Morpho and rgl library(Morpho) library(rgl)  # Set a rotation matrix par3d(userMatrix =          matrix(c(-0.92221391,-0.37156740,-0.10704762,0,-0.37703809,                  0.92551011,0.03568961,0,0.08581252,0.07327446,                  -0.99361324,0,0,0,0,1), nrow = 4, ncol = 4, byrow = TRUE) ) # Load data from 3D shells, extract shapes and classification into species data(\"shells3D\")  shapes <- shells3D$shapes sizes <- log(shells3D$sizes) species <- shells3D$data$species ind <- shells3D$data$individual bzones <- shells3D$data$biozone locality <- shells3D$data$locality mesh_meanspec <- shells3D$mesh_meanspec   # Pile shapes pile_shapes(shapes, alpha = 0.2) # Create morphospace using raw variation. This is interactive, you need  # to rotate the 3D model by yourself and then press enter into the console mspace(shapes, cex.ldm = 2) %>%   proj_shapes(shapes = shapes, col = species, pch = 16) %>%   proj_groups(shapes = shapes, groups = species) title(\"Morphospace\") # Remove nuisance variation from the sample, for each species (a couple were registered # in a single biozone and/or locality, which require little adjustments) detr_shapes <- shapes * 0 for(i in 1:nlevels(species)) {   index <- species == levels(species)[i]   subshapes <- shapes[,,index]   subind <- ind[index]   subloc <- locality[index]   subzone <- bzones[index]    if(!any(i == c(4, 5))) {     detr_shapes[,,index] <- arrayspecs(       detrend_shapes(model = lm(two.d.array(subshapes) ~ subind * subzone * subloc)),       p = nrow(shapes), k = ncol(shapes))   } else {     if(i == 4){       detr_shapes[,,index] <- arrayspecs(         detrend_shapes(model = lm(two.d.array(subshapes) ~ subind)),       p = nrow(shapes), k = ncol(shapes))     } else {       detr_shapes[,,index] <- arrayspecs(         detrend_shapes(model = lm(two.d.array(subshapes) ~ subind * subloc)),       p = nrow(shapes), k = ncol(shapes))     }   } } # Generate morphospace using raw variation, but with a mesh template that improves # visualization:  # First, get shape corresponding to shells3D$mesh_meanspec using geomorph::findMeanSpec, meanspec_id<- findMeanSpec(shapes) meanspec_shape <- shapes[,,meanspec_id]   # Then get consensus shape and warp the mean spec mesh to get the mesh corresponding to the # consensus using Morpho::tps3d detr_meanshape <- consensus(detr_shapes) detr_meanmesh <- tps3d(x = mesh_meanspec , refmat = meanspec_shape, tarmat = detr_meanshape) # Compute allometric axis of each species using pls_shapes pls_list <- lapply(1:nlevels(species), function(i) {   index <- species == levels(species)[i]   subshapes <- detr_shapes[,,index]   subsizes <- sizes[index]    pls_shapes(shapes = two.d.array(subshapes), X = subsizes)  })   # Generate morphospace from refined variation and project allometric axis, add legend omar <- par(\"mar\") par(mar = c(5.1, 4.1, 4.1, 6.5), xpd = TRUE)  msp <- mspace(detr_shapes, template = meanmesh, bg.model = \"gray\",         cex.ldm = 0, invax = 1, adj_frame = c(0.9, 0.85)) %>%   proj_shapes(shapes = detr_shapes, cex = 0, col = species) for(i in 1:nlevels(species)) {   proj_axis(obj = pls_list[[i]], mspace = msp, lwd = 3, col = i, type = \"b\",             cex = c(1,2), axis = 1, pipe = FALSE) } legend(\"topright\", inset = c(-0.25, 0), legend = paste0(\"P. \", levels(species)),         cex = 0.7, pch = 16, col = 1:nlevels(species), bty = \"n\", text.font = 3) title(\"Refined morphospace\") # Create allomorphospace (I'm just making up names at this point) using PLS  # to emphasize allometric variation (this could take a while) amsp <- mspace((detr_shapes), FUN = pls_shapes, X = sizes, LOOCV = TRUE, axes = c(1,1),                    bg.model = \"gray\", cex.ldm = 0, template = meanmesh, invax = 1, plot = FALSE)  # Use plot_mspace to create hybrid morphospace with shape against logsize, add legend omar <- par(\"mar\") par(mar = c(5.1, 4.1, 4.1, 6.5), xpd = TRUE)  plot_mspace(amsp, x = sizes, axes = 1, col.points = species, points = FALSE,              xlab = \"log-size\", xlim = range(sizes), adj_frame = c(0.9, 0.85)) legend(\"topright\", inset = c(-0.25, 0), legend = paste0(\"P. \", levels(species)),         cex = 0.7, pch = 16, col = 1:nlevels(species), bty = \"n\", text.font = 3) title(' \"Allomorphospace \"') for(i in 1:nlevels(species)) {   index <- species == levels(species)[i]   mod <- lm(allomorphospace$x[index,1] ~ sizes[index])   #dat <- cbind(sort(sizes[index]), mod$fitted[order(sizes[index])])   #lines(dat, col = i, lwd = 2)   dat <- cbind(sizes[index], mod$fitted)   points(dat, cex = (sizes[index]/max(sizes[index]))^3, pch = 21, bg = i) }"},{"path":"https://millacarmona.github.io/morphospace/articles/Worked-examples.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Worked examples","text":"Milla Carmona P.S, Lazo D.G., & Soto .M. (2018). Morphological evolution bivalve Ptychomya Lower Cretaceous Argentina. Paleobiology, 44(1), 101-117 https://doi.org/10.1017/pab.2017.32. Milla Carmona P.S, Lazo D.G., & Soto .M. (2021). Ontogeny steinmanellines (Bivalvia: Trigoniida): intra- interspecific appraisal using Early Cretaceous faunas Neuquén Basin case study. Paleobiology, press. https://doi.org/10.1017/pab.2021.32. Murdoch D., & Adler D. (2021). rgl: 3D Visualization Using OpenGL. R package version 0.108.3. https://cran.r-project.org/package=rgl. Soto E.M., Goenaga J., Hurtado J.P., & Hasson E. (2012). Oviposition performance natural hosts cactophilic Drosophila. Evolutionary Ecology, 26, 975-990. https://doi.org/10.1007/s10682-011-9531-5","code":""},{"path":"https://millacarmona.github.io/morphospace/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Pablo Milla Carmona. Author, maintainer.","code":""},{"path":"https://millacarmona.github.io/morphospace/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Milla Carmona P (2022). morphospace: Build, Visualize Explore Morphospaces. https://github.com/millacarmona/morphospace, https://millacarmona.github.io/morphospace/.","code":"@Manual{,   title = {morphospace: Build, Visualize and Explore Morphospaces},   author = {Pablo {Milla Carmona}},   year = {2022},   note = {https://github.com/millacarmona/morphospace, https://millacarmona.github.io/morphospace/}, }"},{"path":"https://millacarmona.github.io/morphospace/index.html","id":"morphospace-","dir":"","previous_headings":"","what":"Build, Visualize and Explore Morphospaces","title":"Build, Visualize and Explore Morphospaces","text":"aim morphospace enhance representation heuristic exploration multivariate ordinations shape data. package can handle common types shape data working integration widely used R packages covering essential steps geometric morphometrics pipeline (e.g. importation, normalization, statistical analysis) Morpho (Schlager 2017), geomorph (Adams et al. 2021), shapes (Dryden 2019), Momocs (Bonhome et al. 2014).","code":""},{"path":"https://millacarmona.github.io/morphospace/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Build, Visualize and Explore Morphospaces","text":"can install development version morphospace GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"millacarmona/morphospace\")"},{"path":"https://millacarmona.github.io/morphospace/index.html","id":"concept","dir":"","previous_headings":"","what":"Concept","title":"Build, Visualize and Explore Morphospaces","text":"basic idea behind morphospace workflow build empirical morphospaces using multivariate methods, use resulting ordination reference project elements representing different aspects morphometric variation. elements added graphic representations objects consecutive ‘layers’ list slots, respectively, using %>% pipe operator magrittr (Bache & Wickham 2022). starting point morphospace workflow set shapes (.e. morphometric data already free variation due differences orientation, position scale). shapes feeeded mspace function, generates morphospace using variety multivariate methods (PCA like). general workflow outlined using tails data set Fasanelli et al. (2022), contains tail shapes 281 specimens belonging 13 species genus Tyrannus.  ordination produced mspace used reference different elements scatter points, groups centroids, convex hulls, phylogeny set morphometric axes can projected using proj_* functions pipeline operator:  \"mspace\" object place, plot_mspace function can used either regenerate/modify plot produce ‘hybrid’ morphospaces. example, PC1 can plotted size explore allometric patterns (conventional non-shape variable). standard graphics tools work , manipulate margins bit add legend.  Ordination axes can also combined phylogenetic tree create phenogram:  morphospace can also handle elliptic Fourier coefficients 3D landmark data, perform useful shape operations, use TPS interpolation curves/meshes improve visualizations. also supports variety multivariate methods (bgPCA, phylogenetic PCA, PLS, phylogenetic PLS) produce ordinations. options details, see General usage Worked examples.","code":"library(morphospace) library(geomorph) library(magrittr) # Load tail data data(\"tails\")  shapes <- tails$shapes spp <- tails$data$species wf <- tails$links phy <- tails$tree  # Generate morphospace mspace(shapes, links = wf, cex.ldm = 5) # Get mean shapes of each species spp_shapes <- consensus(shapes = tails$shapes, index = tails$data$species)  # Generate morphospace and project: msp <- mspace(shapes = shapes, links = wf, cex.ldm = 5) %>%    proj_shapes(shapes = shapes, col = spp) %>% # scatter points   proj_consensus(shapes = spp_shapes, bg = 1:nlevels(spp), pch = 21) %>% # groups centroids (mean shapes)   proj_groups(groups = spp) %>% # convex hulls enclosing groups   proj_phylogeny(tree = phy, lwd = 1.5) # phylogenetic relationships # Plot PC1 against log-size, add legend par(mar = c(5.1, 4.1, 4.1, 6), xpd = TRUE)  plot_mspace(msp, x = tails$sizes, axes = 1, nh = 6, nv = 6, cex.ldm = 4,              col.points = spp, col.groups = 1:nlevels(spp), xlab = \"Log-size\", groups = TRUE) legend(\"topright\", inset = c(-0.22, 0), legend = levels(spp),         cex = 0.7, pch = 16, col = 1:nlevels(spp), bty = \"n\", text.font = 3) # Plot vertical phenogram using PC2, add a legend par(mar = c(5.1, 4.1, 4.1, 6), xpd = TRUE)  plot_mspace(msp, y = phy, axes = 2, nh = 6, nv = 6, cex.ldm = 4,              col.groups = 1:nlevels(spp), ylab = \"Time\") legend(\"topright\", inset = c(-0.22, 0), legend = levels(spp),         cex = 0.7, pch = 16, col = 1:nlevels(spp), bty = \"n\", text.font = 3)"},{"path":"https://millacarmona.github.io/morphospace/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Build, Visualize and Explore Morphospaces","text":"Adams D.C., Collyer M.L., Kaliontzopoulou ., & Baken E.K. (2021). geomorph: Software geometric morphometric analyses. R package version 4.0.2. https://cran.r-project.org/package=geomorph. Bache S.F., & Wickham H. (2022). magrittr: Forward-Pipe Operator R. R package version 2.0.3. https://CRAN.R-project.org/package=magrittr. Bonhomme V., Picq S., Gaucherel C., & Claude J. (2014). Momocs: Outline Analysis Using R. Journal Statistical Software, 56(13), 1-24. http://www.jstatsoft.org/v56/i13/. Dryden, .L. (2019). shapes: statistical shape analysis. R package version 1.2.5. https://CRAN.R-project.org/package=shapes. Fasanelli M.N., Milla Carmona P.S., Soto .M., & Tuero, D.T. (2022). Allometry, sexual selection evolutionary lines least resistance shaped evolution exaggerated sexual traits within genus Tyrannus. Journal Evolutionary Biology, press. https://doi.org/10.1111/jeb.14000. Schlager S. (2017). Morpho Rvcg - Shape Analysis R. Zheng G., Li S., Szekely G. (eds.), Statistical Shape Deformation Analysis, 217-256. Academic Press. https://doi.org/10.1016/B978-0-12-810493-4.00011-0.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/adjust_models2d.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust aspect and scale of background shape models for 2D data — adjust_models2d","title":"Adjust aspect and scale of background shape models for 2D data — adjust_models2d","text":"Avoid background shape models distortion caused differences ranges x y axes. Used internally.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/adjust_models2d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust aspect and scale of background shape models for 2D data — adjust_models2d","text":"","code":"adjust_models2d(models, frame, model_width, model_height)"},{"path":"https://millacarmona.github.io/morphospace/reference/adjust_models2d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust aspect and scale of background shape models for 2D data — adjust_models2d","text":"models array containing background shape models. frame frame shape models plotted. model_width Numeric; width reference shape model (usually consensus). model_height Numeric; height reference shape model (usually consensus).","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/adjust_models2d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust aspect and scale of background shape models for 2D data — adjust_models2d","text":"array containing adjusted shape models.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/adjust_models2d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjust aspect and scale of background shape models for 2D data — adjust_models2d","text":"","code":"#load package and data library(geomorph) #> Loading required package: RRPP #> Loading required package: rgl #> Loading required package: Matrix library(Morpho) #>  #> Attaching package: ‘Morpho’ #> The following object is masked from ‘package:RRPP’: #>  #>     classify data(\"wings\") shapes <- wings$shapes  #perform pca, extract ranges for PC1 and 2 and plot pca <- prcomp(two.d.array(shapes)) xlim <- range(pca$x[,1]) ylim <- range(pca$x[,2]) plot(pca$x, col = \"gray\", xlim = xlim, ylim = ylim)  #calculate and plot shape grid shapes_grid0 <- morphogrid(ordination = pca, axes = c(1,2), datype = \"landm\",                           k = ncol(shapes), p = nrow(shapes),                           nh = 4, nv = 4, xlim = xlim, ylim = ylim) for(i in 1:dim(shapes_grid0$models_arr)[3]) {   points(shapes_grid0$models_arr[,,i], type = \"l\", col = \"red\") }   #amplify range of x axis and replot grid newframe <- cbind(pca$x[,1] * 20, pca$x[,2]) plot(newframe, col = \"gray\") for(i in 1:dim(shapes_grid0$models_arr)[3]) {   points(shapes_grid0$models_arr[,,i], type = \"l\", col = \"red\") }  #calculate width and height of consensus shape wh <- abs(apply(apply(consensus(shapes_grid0$models_arr), 2, range), 2, diff))  #ajust grid to new frame and plot adj_grid <- adjust_models2d(models = shapes_grid0$models_arr, frame = newframe,                             model_width = wh[1], model_height = wh[2]) for(i in 1:dim(adj_grid)[3]) points(adj_grid[,,i], type = \"l\", col = \"blue\", lwd = 2)"},{"path":"https://millacarmona.github.io/morphospace/reference/adjust_models3d.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust aspect and scale of background shape models for 3D data — adjust_models3d","title":"Adjust aspect and scale of background shape models for 3D data — adjust_models3d","text":"Avoid background shape models distortion caused differences ranges x y axes. Used internally.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/adjust_models3d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust aspect and scale of background shape models for 3D data — adjust_models3d","text":"","code":"adjust_models3d(models, frame, size.models, asp.models)"},{"path":"https://millacarmona.github.io/morphospace/reference/adjust_models3d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust aspect and scale of background shape models for 3D data — adjust_models3d","text":"models list containing PNG images depicting background shape models. frame frame shape models plotted. size.models Numeric; size factor shape models. asp.models Numeric; y/x aspect ratio shape models.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/adjust_models3d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust aspect and scale of background shape models for 3D data — adjust_models3d","text":"list containing adjusted frame element models, new, adjusted limits x y axes frame.","code":""},{"path":[]},{"path":"https://millacarmona.github.io/morphospace/reference/adjust_models3d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjust aspect and scale of background shape models for 3D data — adjust_models3d","text":"","code":"#load package and data library(geomorph) library(Morpho) library(rgl) library(png) data(\"shells3D\") shapes <- shells3D$shapes  if (FALSE) { #perform pca, extract ranges for PC1 and 2 pca <- prcomp(two.d.array(shapes)) xlim <- range(pca$x[,1]) ylim <- range(pca$x[,2])  #calculate shape grid and compute model centroid shapes_grid0 <- morphogrid(ordination = pca, axes = c(1,2), datype = \"landm\",                           k = ncol(shapes), p = nrow(shapes),                           nh = 2, nv = 2, xlim = xlim, ylim = ylim) model_centers <- t(apply(shapes_grid0$models_arr, 3, colMeans))[,1:2]  #create a temporal directory, plot 3D models with rgl, and take a snapshot wd <- tempdir() for(i in 1:dim(shapes_grid0$models_arr)[3]) {   plot3d(shapes_grid0$models_arr[,,i], aspect = FALSE, axes = FALSE,               xlab = \"\", ylab = \"\", zlab = \"\")   rgl.snapshot(paste0(wd,\"model\",i,\".png\")) }  #re-import snapshots models <- lapply(1:dim(shapes_grid0$models_arr)[3], function (i) {   model_i <- readPNG(paste0(wd, \"model\", i, \".png\"), native = TRUE) })  #adjust snapshots adj <- adjust_models3d(models = models, frame = model_centers, size.models = 1, asp.models = 1)  #plot everything plot(pca$x, xlim = adj$xlim, ylim = adj$ylim) for(i in 1:length(models)) {   rasterImage(models[[i]], adj$model_frames[[i]][1,1], adj$model_frames[[i]][1,2],               adj$model_frames[[i]][2,1], adj$model_frames[[i]][2,2]) }  #kind of. Anyway, use plot_morphogrid3d that do the full process. }"},{"path":"https://millacarmona.github.io/morphospace/reference/ax_transformation.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute shapes at the extremes of a morphometric axis — ax_transformation","title":"Compute shapes at the extremes of a morphometric axis — ax_transformation","text":"function computes theoretical shapes corresponding extremes morphometric axis, can supplied object containing linear model multivariate ordination analysis.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/ax_transformation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute shapes at the extremes of a morphometric axis — ax_transformation","text":"","code":"ax_transformation(obj, axis = 1, mag = 1)"},{"path":"https://millacarmona.github.io/morphospace/reference/ax_transformation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute shapes at the extremes of a morphometric axis — ax_transformation","text":"obj object containing either multivariate ordination class \"prcomp\", \"bg_prcomp\", \"phy_prcomp\", \"pls_shapes\" \"phy_pls_shapes\" \"mlm\" object fitted using lm(). axis optional numeric value specifying axis multivariate ordination represented. mag Numeric; magnifying factor representing shape transformation.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/ax_transformation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute shapes at the extremes of a morphometric axis — ax_transformation","text":"2-margins matrix, dimensions 2 x (k x p) case landmark data 2 x (4 x nb.h) case Fourer data (nb.h number harmonics used elliptic Fourier analysis).","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/ax_transformation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute shapes at the extremes of a morphometric axis — ax_transformation","text":"object class mlm fitting shape factor (two levels allowed) supplied obj, magnification axis range attained bgPCA.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/ax_transformation.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute shapes at the extremes of a morphometric axis — ax_transformation","text":"MacLeod, N. (2009). Form & shape models. Palaeontological Association Newsletter, 72(620), 14-27.","code":""},{"path":[]},{"path":"https://millacarmona.github.io/morphospace/reference/ax_transformation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute shapes at the extremes of a morphometric axis — ax_transformation","text":"","code":"#load tail data and packages library(geomorph) data(\"tails\") shapes <- tails$shapes links <- tails$links  #perform PCA, compute and plot extreme shapes of PC1 at its natural range pca <- prcomp(two.d.array(shapes)) extshapes2d <- ax_transformation(obj = pca, axis = 1, mag = 1) extshapes <- arrayspecs(extshapes2d, k = ncol(shapes), p = nrow(shapes)) pile_shapes((extshapes), links = links, mshape = FALSE)   #compute and plot extreme shapes of PC2 at its natural range extshapes2d <- ax_transformation(obj = pca, axis = 2, mag = 1) extshapes <- arrayspecs(extshapes2d, k = ncol(shapes), p = nrow(shapes)) pile_shapes(extshapes, links = links, mshape = FALSE)   #compute and plot extreme shapes of PC2 magnified x2 extshapes2d <- ax_transformation(obj = pca, axis = 2, mag = 2) extshapes <- arrayspecs(extshapes2d, k = ncol(shapes), p = nrow(shapes)) pile_shapes(extshapes, links = links, mshape = FALSE)   #perform lm of shape on size, compute and plot extreme shapes at its natural range model <- lm(two.d.array(tails$shapes) ~ log(tails$sizes)) extshapes2d <- ax_transformation(obj = model, mag = 1) extshapes <- arrayspecs(extshapes2d, k = ncol(shapes), p = nrow(shapes)) pile_shapes(extshapes, links = links, mshape = FALSE)   #perform lm of shape on size, compute and plot extreme shapes at its natural range model <- lm(two.d.array(tails$shapes) ~ tails$data$sex) extshapes2d <- ax_transformation(obj = model, mag = 1) extshapes <- arrayspecs(extshapes2d, k = ncol(shapes), p = nrow(shapes)) pile_shapes(extshapes, links = links, mshape = FALSE)   #perform lm of shape on size, compute and plot extreme shapes magnified x2 model <- lm(two.d.array(tails$shapes) ~ tails$data$sex) extshapes2d <- ax_transformation(obj = model, mag = 2) extshapes <- arrayspecs(extshapes2d, k = ncol(shapes), p = nrow(shapes)) pile_shapes(extshapes, links = links, mshape = FALSE)"},{"path":"https://millacarmona.github.io/morphospace/reference/bg_prcomp.html","id":null,"dir":"Reference","previous_headings":"","what":"Between-groups Principal Component Analysis — bg_prcomp","title":"Between-groups Principal Component Analysis — bg_prcomp","text":"Performs group PCA allowing leave-one-cross-validation, useful one number variables exceeds number observations (.e. alleviates spurious separation groups).","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/bg_prcomp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Between-groups Principal Component Analysis — bg_prcomp","text":"","code":"bg_prcomp(   x,   groups,   gweights = TRUE,   LOOCV = FALSE,   recompute = FALSE,   corr = FALSE )"},{"path":"https://millacarmona.github.io/morphospace/reference/bg_prcomp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Between-groups Principal Component Analysis — bg_prcomp","text":"x matrix variables columns observations rows. groups Factor; classification observations x priori groups. gweights Logical; whether weight group number observations. LOOCV Logical; whether apply leave-one-cross-validation. recompute Logical; whether re-compute rotation matrix using scores resulting LOOCV. corr Logical; whether use correlation instead covariance matrix input.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/bg_prcomp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Between-groups Principal Component Analysis — bg_prcomp","text":"\"bg_prcomp\" object formatted following \"prcomp\"class: $sdev: standard deviations principal components (.e. square roots eigenvalues covariance/correlation matrix). $rotation: n x (g - 1) matrix eigenvector coefficients (g number groups. $center: mean values original variables entire sample (.e. grand mean). $totvar: mean values original variables group. $grcenters: sum variances original variables.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/bg_prcomp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Between-groups Principal Component Analysis — bg_prcomp","text":"bgPCA finds liner combination variables (context morphospace generally series shapes arranged 2-margin matrix) maximizing variation groups' centroids, project actual observation resulting synthetic axes. method preferred LDA/CVA way produce ordinations maximizing separation groups avoids spherization shape variation carried former methods. Recently, discovered bgPCA produces spurious separation groups number variables exceeds number observations (common situation geometric morphometrics analyses). problem can alleviated carrying leave-one-cross-validation (LOOCV; .e. observation excluded calculation bgPCA prior projection resulting ordination way calculate score).","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/bg_prcomp.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Between-groups Principal Component Analysis — bg_prcomp","text":"Mitteroecker, P., & Bookstein, F. (2011). Linear discrimination, ordination, visualization selection gradients modern morphometrics. Evolutionary Biology, 38(1), 100-114. Bookstein, F. L. (2019). Pathologies -groups principal components analysis geometric morphometrics. Evolutionary Biology, 46(4), 271-302. Cardini, ., O’Higgins, P., & Rohlf, F. J. (2019). Seeing distinct groups none: spurious patterns -group PCA. Evolutionary Biology, 46(4), 303-316. Cardini, ., & Polly, P. D. (2020). Cross-validated group PCA scatterplots: solution spurious group separation?. Evolutionary Biology, 47(1), 85-95. Rohlf, F. J. (2021). clusters patterns can seem found analyses high-dimensional data. Evolutionary Biology, 48(1), 1-16. Thioulouse, J., Renaud, S., Dufour, . B., & Dray, S. (2021). Overcoming spurious groups problem -group PCA. Evolutionary Biology, 48(4), 458-471.","code":""},{"path":[]},{"path":"https://millacarmona.github.io/morphospace/reference/bg_prcomp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Between-groups Principal Component Analysis — bg_prcomp","text":"","code":"#load data data(\"shells\")  #extract species classification and shapes species <- shells$data$species shapes <- shells$shapes$coe  #perform between-groups PCA bgpca <- bg_prcomp(x = shapes, groups = species)  #look at the results names(bgpca) #the contents of the resulting object #> [1] \"sdev\"      \"rotation\"  \"x\"         \"center\"    \"grcenters\" \"totvar\"    exp_var(bgpca) #variance explained by each axis #>       variance cummulative #> bgPC1 88.52150    88.52150 #> bgPC2  4.67040    93.19190 #> bgPC3  2.80097    95.99287 plot(bgpca$x) #ordination hulls_by_group_2D(bgpca$x, species) #add convex hulls for species"},{"path":"https://millacarmona.github.io/morphospace/reference/build_template2d.html","id":null,"dir":"Reference","previous_headings":"","what":"Build template for 2D shape data — build_template2d","title":"Build template for 2D shape data — build_template2d","text":"Create template (.e. set curves describing structure landmarks placed upon) aid morphospace visualization, interactively.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/build_template2d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build template for 2D shape data — build_template2d","text":"","code":"build_template2d(image, nlands, ncurves)"},{"path":"https://millacarmona.github.io/morphospace/reference/build_template2d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build template for 2D shape data — build_template2d","text":"image Character; path image structure, png format. nlands Numeric; number landmarks placed. ncurves Numeric; number curves drawn.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/build_template2d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build template for 2D shape data — build_template2d","text":"2-column matrix landmarks followed coordinates defining curves drawn, separated NAs.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/build_template2d.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Build template for 2D shape data — build_template2d","text":"functions let user create template interactively. user first asked place landmarks (place order shape data interest). nland landmarks placed, user asked place number curves specified ncurves; number coordinates used drawn arbitrary, user decide curve ready (press 'Finish' button top-right corner Plots pane).","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/build_template2d.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Build template for 2D shape data — build_template2d","text":"Claude, J. (2008). Morphometrics R. Springer Science & Business Media, 316.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/build_template2d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build template for 2D shape data — build_template2d","text":"","code":"#generate template interactively if (FALSE) { temp <- build_template2d(image = \"extdata/sample_wing.jpg\", nlands = 9, ncurves = 9)  plot(temp, type = \"n\", asp = 1) points(temp[c(1:9),], col = \"red\", pch = 16) points(temp[-c(1:9),], type = \"l\") }"},{"path":"https://millacarmona.github.io/morphospace/reference/consensus.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute consensus shape(s) — consensus","title":"Compute consensus shape(s) — consensus","text":"Compute mean shape entire sample, mean shape subset samples, mean shape levels factor (landmark configurations).","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/consensus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute consensus shape(s) — consensus","text":"","code":"consensus(shapes, index = NULL)"},{"path":"https://millacarmona.github.io/morphospace/reference/consensus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute consensus shape(s) — consensus","text":"shapes Shape data. index Either numeric vector indicating configurations averaged factor whose levels used average groups configurations.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/consensus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute consensus shape(s) — consensus","text":"landmark data, either p x k matrix defining single mean shape p x k x n array containing n mean shapes, one level index. Fourier data, n x (4 x nb.h)matrix Fourier coefficients (n either 1 number levels index nb.h number harmonics used elliptic Fourier analysis).","code":""},{"path":[]},{"path":"https://millacarmona.github.io/morphospace/reference/consensus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute consensus shape(s) — consensus","text":"","code":"#load tails data and packages library(Morpho) library(Momocs) #>  #> Attaching package: ‘Momocs’ #> The following object is masked _by_ ‘.GlobalEnv’: #>  #>     wings #> The following objects are masked from ‘package:Morpho’: #>  #>     export, tps2d #> The following object is masked from ‘package:geomorph’: #>  #>     mosquito #> The following object is masked from ‘package:morphospace’: #>  #>     wings #> The following object is masked from ‘package:stats’: #>  #>     filter data(\"tails\") shapes <- tails$shapes  #compute and plot mean shape of the entire sample mshape <- consensus(shapes) plot(mshape) lineplot(mshape, tails$links)   #getting mean shape for levels of a factor: compute and plot mean shape of #each of the 13 species index <- tails$data$species sp_mshapes <- consensus(shapes, index = index) pile_shapes(sp_mshapes, links = tails$links, mshape = FALSE)   #getting mean shape for a subset of specimens: compute and plot mean shape of #deep-forked species index <- which(tails$data$type == \"DF\") df_mshape <- consensus(shapes, index = index) plot(df_mshape) lineplot(df_mshape, tails$links)   #quick demo for Fourier data: data(\"shells\") shapes <- shells$shapes  #mean shape of the entire sample mshape <- consensus(shapes) plot(inv_efourier(mshape, nb.pts = 200), type = \"l\")   #mean shape of each of the four species sp_mshapes <- consensus(shapes, index = shells$data$species) pile_shapes(sp_mshapes, mshape = FALSE)"},{"path":"https://millacarmona.github.io/morphospace/reference/correct_efourier.html","id":null,"dir":"Reference","previous_headings":"","what":"Correct artificially rotated set of Fourier shapes interactively — correct_efourier","title":"Correct artificially rotated set of Fourier shapes interactively — correct_efourier","text":"Choose correct 180-degrees spurious rotation sample closed outline shapes.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/correct_efourier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correct artificially rotated set of Fourier shapes interactively — correct_efourier","text":"","code":"correct_efourier(ef, index = NULL)"},{"path":"https://millacarmona.github.io/morphospace/reference/correct_efourier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correct artificially rotated set of Fourier shapes interactively — correct_efourier","text":"ef \"OutCoe\" object. index optional numeric vector providing indices identifying shapes rotated. declared, overrides interative selection shapes.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/correct_efourier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correct artificially rotated set of Fourier shapes interactively — correct_efourier","text":"\"OutCoe\" object containing corrected outlines.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/correct_efourier.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Correct artificially rotated set of Fourier shapes interactively — correct_efourier","text":"usage function inspired SHAPE program elliptic Fourier analysis (Iwata & Ukai 2002). index argument intended facilitate inclusion scripts without manually select outlines every time.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/correct_efourier.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Correct artificially rotated set of Fourier shapes interactively — correct_efourier","text":"Iwata, H., & Ukai, Y. (2002). SHAPE: computer program package quantitative evaluation biological shapes based elliptic Fourier descriptors. Journal Heredity, 93(5), 384-385.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/correct_efourier.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Correct artificially rotated set of Fourier shapes interactively — correct_efourier","text":"","code":"#load shells data data(\"shells\") ef <- shells$shapes  #correct first 3 shapes automatically with index ef_corr1 <- correct_efourier(ef, index = 1:3)  pile_shapes(ef_corr1, mshape = FALSE)   #correct interactively (the process will remain open until #you click 'finish' or press the Esc key) if (FALSE) {  ef_corr2 <- correct_efourier(ef_corr1) }"},{"path":"https://millacarmona.github.io/morphospace/reference/detrend_shapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove shape variation associated to external variables — detrend_shapes","title":"Remove shape variation associated to external variables — detrend_shapes","text":"Detrend shape data using functional relationship shape data external explanatory variable(s) (works factors numerics), estimated using linear model.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/detrend_shapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove shape variation associated to external variables — detrend_shapes","text":"","code":"detrend_shapes(model, xvalue = NULL, newx = NULL, newy = NULL)"},{"path":"https://millacarmona.github.io/morphospace/reference/detrend_shapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove shape variation associated to external variables — detrend_shapes","text":"model mlm object created using lm(). xvalue value (numeric) level (character) shape data standardized (.e. centered); NULL, mean complete sample used. newx, newy New data standardized instead used model. Coefficients taken linear model applied new data predict shapes desired xvalue.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/detrend_shapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove shape variation associated to external variables — detrend_shapes","text":"2-margins matrix, dimensions n x (k x p) case landmark data n x (4 x nb.h) case Fourer data (nb.h number harmonics used elliptic Fourier analysis).","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/detrend_shapes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove shape variation associated to external variables — detrend_shapes","text":"function detrends (standardizes, corrects) shapes (landmarks Fourier coefficients) variation associated non-shape variables, using lm model fitting former latter. returns 2-margins matrix shapes (means extra step taken larndmark data order retrieve configurations 3-margins array format) corresponding detrended versions shapes specified left size formula model. However, newx newy provided, function instead return shapes provided newy, detrended using relationship described model. grand mean sample shapes used default center shape variation, although xvalue specifying level numeric value explanatory variable model center shapes can provided. 'displacement' can applied one explanatory variable time.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/detrend_shapes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Remove shape variation associated to external variables — detrend_shapes","text":"Klingenberg, C. P. (2016). Size, shape, form: concepts allometry geometric morphometrics. Development Genes Evolution, 226(3), 113-137.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/detrend_shapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove shape variation associated to external variables — detrend_shapes","text":"","code":"#### Landmark data  #load tails data and packages library(geomorph) data(tails) shapes <- tails$shapes species <- tails$data$species sex <- tails$data$sex logsizes <- log(tails$sizes) msp <- mspace(shapes, links = tails$links, points = TRUE) hulls_by_group_2D(msp$x, fac = species)    ### For numeric variables  #fit linear model between shapes and sizes, then center at the grand mean of the sample model <- lm(two.d.array(shapes) ~ logsizes) detr_shapes_mat <- detrend_shapes(model)  detr_shapes_nosize <- arrayspecs(detr_shapes_mat, k = 2, p = 9)  msp_nosize <- mspace(detr_shapes_nosize, links = tails$links, points = TRUE) hulls_by_group_2D(msp_nosize$x, fac = species)   ## Using xvalue  #fit linear model between shapes and sizes, then center at the shape corresponding to the #maximum size of the sample model <- lm(two.d.array(shapes) ~ logsizes) detr_shapes_mat2 <- detrend_shapes(model,                                    xvalue = max(logsizes))  detr_shapes_nosize2 <- arrayspecs(detr_shapes_mat2, k = 2, p = 9)  msp_nosize2 <- mspace(detr_shapes_nosize2, links = tails$links, points = TRUE) hulls_by_group_2D(msp_nosize2$x, fac = species)   ## Using newx, newy  #fit linear model between shapes and sizes for NDF species, then use the NDF allometry to #detrend DF shapes from alometric variation #maximum size of the sample index <- tails$data$type == \"NDF\" shapes_ndf <- shapes[,,index] logsizes_ndf <- logsizes[index] shapes_df <- shapes[,,!index] logsizes_df <- logsizes[!index]  model <- lm(two.d.array(shapes_ndf) ~ logsizes_ndf) detr_shapes_mat3 <- detrend_shapes(model,                                    newx = logsizes_df,                                    newy = two.d.array(shapes_df))  detr_shapes_nosize3 <- arrayspecs(detr_shapes_mat3, k = 2, p = 9)  msp_nosize3 <- mspace(detr_shapes_nosize3, links = tails$links, points = TRUE) hulls_by_group_2D(msp_nosize3$x, fac = factor(species[!index]))    ### For factors  #fit linear model between shapes and species, then center at the grand mean of the sample model <- lm(two.d.array(shapes) ~ species) detr_shapes_mat <- detrend_shapes(model)  detr_shapes_nospp <- arrayspecs(detr_shapes_mat, k = 2, p = 9)  msp_nospp <- mspace(detr_shapes_nospp, links = tails$links, points = TRUE) hulls_by_group_2D(msp_nospp$x, fac = species)   ## Using xvalue  #fit linear model between shapes and species, then center at the shape corresponding to #the mean shape of T. savana model <- lm(two.d.array(shapes) ~ species) detr_shapes_mat2 <- detrend_shapes(model,                                    xvalue = \"T. savana\")  detr_shapes_nospp2 <- arrayspecs(detr_shapes_mat2, k = 2, p = 9)  msp_nospp2 <- mspace(detr_shapes_nospp2, links = tails$links, points = TRUE) hulls_by_group_2D(msp_nospp2$x, fac = species)   ## Using newx, newy  #fit linear model between shapes and sex for NDF species, then use the NDF sexual #dimorphism to detrend DF shapes from variation between sexes #maximum size of the sample index <- tails$data$type == \"NDF\" shapes_ndf <- shapes[,,index] sex_ndf <- sex[index] shapes_df <- shapes[,,!index] sex_df <- sex[!index]  model_ndf <- lm(two.d.array(shapes_ndf) ~ sex_ndf) detr_shapes_mat3 <- detrend_shapes(model_ndf,                                    newx = sex_df,                                    newy = two.d.array(shapes_df))  detr_shapes_nosize3 <- arrayspecs(detr_shapes_mat3, k = 2, p = 9)  msp_nosize3 <- mspace(detr_shapes_nosize3, links = tails$links, points = TRUE) hulls_by_group_2D(msp_nosize3$x, fac = factor(species[!index]))   #### Fourier data (quick demo)  #load shells data data(shells) shapes <- shells$shapes$coe species <- shells$data$species logsizes <- log(shells$sizes) msp <- mspace(shapes, mag = 0.5, size.models = 0.4, asp.models = 0.5, points = TRUE) hulls_by_group_2D(msp$x, fac = species)   #fit linear model between shapes and sizes, then center at the shape corresponding to #the grand mean model <- lm(shapes ~ logsizes) detr_shapes_nosize <- detrend_shapes(model)  msp_nosize <- mspace(detr_shapes_nosize, mag = 0.5, size.models = 0.4,                     asp.models = 0.5, points = TRUE) hulls_by_group_2D(msp_nosize$x, fac = species)   #fit linear model between shapes and sizes, then center at the shape corresponding #to the maximum size model <- lm(shapes ~ logsizes) detr_shapes_nosize2 <- detrend_shapes(model,                                       xvalue = max(logsizes))  msp_nosize2 <- mspace(detr_shapes_nosize2, mag = 0.5, size.models = 0.4,                       asp.models = 0.5, points = TRUE) hulls_by_group_2D(msp_nosize2$x, fac = species)   #fit linear model between shapes and sizes, then center at the maximum size shapes_koeneni <- shapes[species == \"koeneni\",] logsizes_koeneni <- logsizes[species == \"koeneni\"] shapes_esbelta <- shapes[species == \"esbelta\",] logsizes_esbelta <- logsizes[species == \"esbelta\"]  model_koeneni <- lm(shapes_koeneni ~ logsizes_koeneni) detr_shapes_nosize3 <- detrend_shapes(model_koeneni,                                       newx = logsizes_esbelta,                                       newy = shapes_esbelta)  msp_nosize3 <- mspace(shapes_esbelta, mag = 0.5, size.models = 0.15,                       asp.models = 0.7, points = TRUE) title(\"raw P. esbelta morphospace\")  msp_nosize4 <- mspace(detr_shapes_nosize3, mag = 0.5, size.models = 0.15,                        asp.models = 0.7, points = TRUE) title(\"P. esbelta morphospace, refined using \\n allometric variation from P. koeneni\")"},{"path":"https://millacarmona.github.io/morphospace/reference/exp_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate percentages of variation accounted by synthetic axes — exp_var","title":"Calculate percentages of variation accounted by synthetic axes — exp_var","text":"Calculate percentage total original variation accounted syntethtic axes generated different multivariate ordination methods.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/exp_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate percentages of variation accounted by synthetic axes — exp_var","text":"","code":"exp_var(ordination)"},{"path":"https://millacarmona.github.io/morphospace/reference/exp_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate percentages of variation accounted by synthetic axes — exp_var","text":"ordination ordination (.e. \"prcomp\", \"bg_prcomp\", \"phy_prcomp\", \"pls_shapes\" \"phy_pls_shapes\" object).","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/exp_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate percentages of variation accounted by synthetic axes — exp_var","text":"table informing percentages cumulative percentages original variation accounted synthetic axis multivariate ordination.","code":""},{"path":[]},{"path":"https://millacarmona.github.io/morphospace/reference/exp_var.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate percentages of variation accounted by synthetic axes — exp_var","text":"","code":"#load data data(\"shells\")  #extract shapes, log sizes and species classification species <- shells$data$species shapes <- shells$shapes$coe sizes <- log(shells$sizes)  #perform PCA, bgPCA, and PLS pca <- prcomp(shapes) bgpca <- bg_prcomp(shapes, groups = species) pls <- pls_shapes(shapes, X = sizes)  #compare percentages of total variation accounted by the first axes when #the analysis is unsupervised (PCA), or supervised by species (bgPCA) or #by log size (PLS) head(exp_var(pca)) #>     variance cummulative #> PC1 88.65268    88.65268 #> PC2  4.96295    93.61562 #> PC3  2.97799    96.59362 #> PC4  1.24819    97.84181 #> PC5  0.67411    98.51592 #> PC6  0.47215    98.98807 exp_var(bgpca) #>       variance cummulative #> bgPC1 88.52150    88.52150 #> bgPC2  4.67040    93.19190 #> bgPC3  2.80097    95.99287 exp_var(pls) #>       variance cummulative #> PLS-1  7.86911     7.86911"},{"path":"https://millacarmona.github.io/morphospace/reference/expected_shapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute shapes expected by a linear model — expected_shapes","title":"Compute shapes expected by a linear model — expected_shapes","text":"function calculates returns shapes expected linear model, one specific values numeric explanatory variable.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/expected_shapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute shapes expected by a linear model — expected_shapes","text":"","code":"expected_shapes(model, xvalue)"},{"path":"https://millacarmona.github.io/morphospace/reference/expected_shapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute shapes expected by a linear model — expected_shapes","text":"model mlm object created using lm(). xvalue numeric value values x model calculate expected shape(s).","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/expected_shapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute shapes expected by a linear model — expected_shapes","text":"2-margins matrix, dimensions n x (k x p) case landmark data (n number shapes provided left side formula model) n x (4 x nb.h) case Fourer data (nb. h number harmonics used elliptic Fourier analysis).","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/expected_shapes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute shapes expected by a linear model — expected_shapes","text":"Similar spirit consensus() continuous covariates instead levels factor (different usage).","code":""},{"path":[]},{"path":"https://millacarmona.github.io/morphospace/reference/expected_shapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute shapes expected by a linear model — expected_shapes","text":"","code":"#load data data(\"shells\")  #compute shape expected at all the empiric values of size mod <- lm(shells$shapes$coe ~ log(shells$sizes)) predshapes <- expected_shapes(mod, xvalue = log(shells$sizes)) pile_shapes(predshapes, mshape = FALSE)   #compute shape expected at the maximum and maximum sizes mod <- lm(shells$shapes$coe ~ log(shells$sizes)) bigshape <- expected_shapes(mod, xvalue = max(log(shells$sizes))) smallshape <- expected_shapes(mod, xvalue = min(log(shells$sizes)))  plot(inv_efourier(bigshape, 300), type = \"l\", lwd = 2)  plot(inv_efourier(smallshape, 300), type = \"l\", lwd = 2)"},{"path":"https://millacarmona.github.io/morphospace/reference/hulls_by_group_2D.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot 2D convex hulls for a series of groups — hulls_by_group_2D","title":"Plot 2D convex hulls for a series of groups — hulls_by_group_2D","text":"Plot convex hulls different groups 2D scatterplots created using generic plot() function. Used internally (mostly).","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/hulls_by_group_2D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot 2D convex hulls for a series of groups — hulls_by_group_2D","text":"","code":"hulls_by_group_2D(xy, fac, col = 1:nlevels(fac), lty = 1, ...)"},{"path":"https://millacarmona.github.io/morphospace/reference/hulls_by_group_2D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot 2D convex hulls for a series of groups — hulls_by_group_2D","text":"xy Coordinates scatterplot. fac factor grouping data points. col vector (either character numeric) indicating colors used group. lty vector (either character numeric) indicating type line used draw hulls. ... arguments passed polygon().","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/hulls_by_group_2D.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot 2D convex hulls for a series of groups — hulls_by_group_2D","text":"","code":"#load landmark data and nencessary packages library(geomorph) data(\"tails\") shapes <- tails$shapes species <- tails$data$species  #perform PCA pca <- prcomp(two.d.array(shapes))  #plot and add convex hulls plot(pca$x) hulls_by_group_2D(pca$x, fac = species, col = \"black\")"},{"path":"https://millacarmona.github.io/morphospace/reference/hulls_by_group_3D.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot 3D convex hulls for a series of groups — hulls_by_group_3D","title":"Plot 3D convex hulls for a series of groups — hulls_by_group_3D","text":"Plot convex hulls different groups 3D scatterplots created using rgl. Used internally (mostly).","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/hulls_by_group_3D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot 3D convex hulls for a series of groups — hulls_by_group_3D","text":"","code":"hulls_by_group_3D(xyz, fac, col = 1:nlevels(fac), ...)"},{"path":"https://millacarmona.github.io/morphospace/reference/hulls_by_group_3D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot 3D convex hulls for a series of groups — hulls_by_group_3D","text":"xyz Coordinates scatterplot fac factor grouping data points. col vector (either character numeric) indicating colors used group. ... arguments passed rgl::rgl.triangles() (e.g. specular, alpha).","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/hulls_by_group_3D.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot 3D convex hulls for a series of groups — hulls_by_group_3D","text":"","code":"#load landmark data and necessary packages library(geomorph) data(\"tails\") shapes <- tails$shapes species <- tails$data$species  #perform PCA pca <- prcomp(two.d.array(shapes))  #plot and add convex hulls if (FALSE) {  plot3d(pca$x) hulls_by_group_3D(pca$x, fac = species, col = \"gray\")  }"},{"path":"https://millacarmona.github.io/morphospace/reference/inv_efourier.html","id":null,"dir":"Reference","previous_headings":"","what":"Iverse Fourier transform — inv_efourier","title":"Iverse Fourier transform — inv_efourier","text":"wrapper efourier_i() Momocs transform set Fourier coefficients (x,y) coordinates. Used internally.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/inv_efourier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Iverse Fourier transform — inv_efourier","text":"","code":"inv_efourier(coe, nb.pts = 120)"},{"path":"https://millacarmona.github.io/morphospace/reference/inv_efourier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Iverse Fourier transform — inv_efourier","text":"coe vector Fourier coefficients. nb.pts Numeric, specifying number coordinates sampling outlines.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/inv_efourier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Iverse Fourier transform — inv_efourier","text":"nb.pts x 2 matrix (x,y) cartesian coordinates defining single outline shape.","code":""},{"path":[]},{"path":"https://millacarmona.github.io/morphospace/reference/inv_efourier.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Iverse Fourier transform — inv_efourier","text":"","code":"#load data and extract the first outline data(\"shells\") shape_coe <- shells$shapes$coe[1,]  #get and plot (x,y) coordinates for using different number of coordinares shape_xy <- inv_efourier(shape_coe, nb.pts = 10) plot(shape_xy)  shape_xy <- inv_efourier(shape_coe, nb.pts = 30) plot(shape_xy)  shape_xy <- inv_efourier(shape_coe, nb.pts = 100) plot(shape_xy)"},{"path":"https://millacarmona.github.io/morphospace/reference/morphogrid.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate background shape models — morphogrid","title":"Generate background shape models — morphogrid","text":"Calculate arrange background shape models morphospaces. Used internally.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/morphogrid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate background shape models — morphogrid","text":"","code":"morphogrid(   ordination,   axes,   datype,   template = NULL,   x = NULL,   y = NULL,   p = NULL,   k = NULL,   nh = 5,   nv = 4,   mag = 1,   asp = NA,   xlim = NULL,   ylim = NULL,   rot.models = 0,   size.models = 1,   asp.models = 1 )"},{"path":"https://millacarmona.github.io/morphospace/reference/morphogrid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate background shape models — morphogrid","text":"ordination ordination (.e. \"prcomp\", \"bg_prcomp\", \"phy_prcomp\" \"pls_shape\" object). axes Numeric length 1 2, indicating morphometric axes plotted. values either x y provided, first value argument considered. datype Character; type shape data (either \"fcoef\" \"landm\"). template 2-column matrix containing landmarks/semilandmarks followed coordinates defining curve set curves describing additional aspects morphology, warped using TPS interpolation produce set background shell models(see build_template2d). x Optional vector non-morphometric variable plotted x axis. y Optional vector non-morphometric variable plotted y axis. p Numeric, indicating number landmarks/semilandmarks used (landmark data ). k Numeric, indicating number cartesian dimensions landmarks/semilandmarks (landmark data ). nh Numeric; number shape models along x axis. nv Numeric; number shape models along y axis. mag Numeric; magnifying factor shape models. xlim, ylim, asp Standard arguments passed generic plot function rot.models Numeric; angle (degrees) rotate shape models. size.models Numeric; size factor shape models. asp.models Numeric; y/x aspect ratio shape models.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/morphogrid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate background shape models — morphogrid","text":"list length 2 containing: $models_mat: 2-column matrix (x,y) coordinates shape models background. $models_arr: models_mat 3-margins array format.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/morphogrid.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generate background shape models — morphogrid","text":"MacLeod, N. (2009). Form & shape models. Palaeontological Association Newsletter, 72(620), 14-27.","code":""},{"path":[]},{"path":"https://millacarmona.github.io/morphospace/reference/morphogrid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate background shape models — morphogrid","text":"","code":"#load data and packages  library(geomorph)  data(\"tails\")   #perform pca on tails shapes  pca <- prcomp(two.d.array(tails$shapes))   #generate grid of shape models sampling the range of variation  #at 4 locations (the 4 corners of the scatterplot)  shapes_grid <- morphogrid(ordination = pca, axes = c(1,2), datype = \"landm\",                            k = ncol(tails$shapes), p = nrow(tails$shapes),                            nh = 2, nv = 2)   #plot grid from $models_mat and project each shape in models_arr  plot(shapes_grid$models_mat)  points(shapes_grid$models_arr[,,1], pch=16, col = 1)  points(shapes_grid$models_arr[,,2], pch=16, col = 2)  points(shapes_grid$models_arr[,,3], pch=16, col = 3)  points(shapes_grid$models_arr[,,4], pch=16, col = 4)"},{"path":"https://millacarmona.github.io/morphospace/reference/mspace.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate morphospace — mspace","title":"Generate morphospace — mspace","text":"Create empirical morphospace ordination comprising set axes synthesizing shape variation. Allows variety multivariate methods building ordination.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/mspace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate morphospace — mspace","text":"","code":"mspace(   shapes,   axes = c(1, 2),   links = NULL,   template = NULL,   p = NULL,   k = NULL,   FUN = stats::prcomp,   nh = 5,   nv = 4,   mag = 1,   invax = NULL,   asp = NA,   xlim = NULL,   ylim = NULL,   xlab = NULL,   ylab = NULL,   adj_frame = c(1, 1),   rot.models = 0,   size.models = 1,   asp.models = 1,   col.models = \"#708095\",   bg.models = NULL,   lwd.models = 1,   alpha.models = 1,   points = FALSE,   cex.ldm = 1,   col.ldm = \"black\",   plot = TRUE,   ... )"},{"path":"https://millacarmona.github.io/morphospace/reference/mspace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate morphospace — mspace","text":"shapes Shapes data. axes Numeric length 2, indicating axes plotted. links list indices coordinates defining wireframe (following format used Morpho). template Either 2-column matrix containing landmarks/semilandmarks followed coordinates defining curve set curves describing additional aspects morphology (2D shape data) \"mesh3d\" object containing geometry structure landmarks placed (3D shape data), corresponding mean shape sample. warped using TPS interpolation produce set background shell models (see build_template2d). p Numeric, indicating number landmarks/semilandmarks used (landmark data ). k Numeric, indicating number cartesian dimensions landmarks/semilandmarks (landmark data ). FUN function used synthesizing geometric morphometric variation. Usual alternatives include prcomp, bg_prcomp phy_prcomp. nh Numeric; number shape models along x axis. nv Numeric; number shape models along y axis. mag Numeric; magnifying factor shape models. invax Optional numeric indicating axes provided axes needs inverted (optionsare 1, 2 c(1,2)). xlim, ylim, xlab, ylab, asp Standard arguments passed generic plot function. adj_frame Numeric length 2, providing posteriori scaling factors width height frame, respectively. rot.models Numeric; angle (degrees) rotate shape models. size.models Numeric; size factor shape models. asp.models Numeric; y/x aspect ratio shape models. col.models color wireframes/outlines. bg.models Background color outlines/meshes. lwd.models Numeric; width lines wireframes/outlines. alpha.models Numeric; transparency factor background models (3D ). points Logical; whether plot scatter points. cex.ldm Numeric; size landmarks/semilandmarks background models. col.ldm color landmarks/semilandmarks background models. plot Logical; whether plot morphospace. ... arguments passed FUN.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/mspace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate morphospace — mspace","text":"object class \"mspace\", list containing: $ordtype:  method used multivariate ordination. $datype:  type shape data used. $x:  scores sample shapes synthetic axes. $rotation:  eigenvector's coefficients. $center:  mean values original shape variables. $plotinfo:  list information used create plot.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/mspace.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate morphospace — mspace","text":"function central piece morphospace workflow. produces synthetic space sample normalized shapes using eigenanalysis-based ordination methods (PCA, groups PCA, two-block PLS, phylogenetic versions) generates shape models depicting range realized variation, retaining information necessary project retrieve new compatible shapes. output mspace meant expanded using proj_* family functions %>% operator maggritr.","code":""},{"path":[]},{"path":"https://millacarmona.github.io/morphospace/reference/mspace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate morphospace — mspace","text":"","code":"##2D Landmark data  #load and extract relevant data and information data(\"tails\") shapes <- tails$shapes species <- tails$data$species links <- tails$links tree <- tails$tree  #generate morphospace using the basic sample of shapes, PCA as ordination method #and the links between landmarks provided for backround models mspace(shapes, links = links, mag = 0.7, axes = c(1,2), points = TRUE)   #increase magnification factor x2: mspace(shapes, links = links, mag = 1.5, axes = c(1,2), points = TRUE)   #plot PCs 1 and 3 mspace(shapes, links = links, mag = 1.5, axes = c(1,3), points = TRUE)   #generate morphospace using the basic sample of shapes, bgPCA as ordination method #and links between landmarks for backround models mspace(shapes, links = links, FUN = bg_prcomp, groups = species, mag = 0.7,        axes = c(1,2), invax = 1, points = TRUE)   #generate morphospace using species' consensus shapes and phylogenetic tree, #phylogenetic PCA as ordination method, and links between landmarks for backround #models sp_shapes <- consensus(shapes, species) mspace(sp_shapes, links = links, FUN = phy_prcomp, tree = tree, mag = 0.7,        axes = c(1,2), points = TRUE)   #just create a morphospace without plotting, save into an object, and inspect morphosp <- mspace(shapes, links = links, mag = 0.7, axes = c(1,2), plot = FALSE) names(morphosp) #> [1] \"x\"        \"rotation\" \"center\"   \"datype\"   \"ordtype\"  \"plotinfo\"   #load wing data for a quick demo with templates data(\"wings\") shapes <- wings$shapes links <- wings$links template <- wings$template  #generate morphospace using links mspace(shapes, links = links, mag = 3, axes = c(1,2), points = TRUE) #> Error in shapes_mat(shapes): object 'data2d' not found  #generate morphospace using template mspace(shapes, template = template, mag = 3, axes = c(1,2), points = TRUE) #> Error in shapes_mat(shapes): object 'data2d' not found    ##3D Landmark data  if (FALSE) { #load data and packages and extract relevant data and information library(Morpho) data(\"shells3D\") shapes <- shells3D$shapes mesh_meanspec <- shells3D$mesh_meanspec  #generate morphospace. This is interactive, you need to rotate the shape by yourself and #then press enter into the console. mspace(shapes, mag = 1, axes = c(1,2), col.ldm = \"black\", cex.ldm = 2, points = TRUE)  #generate morphospace using a mesh template that improves visualization: #first, get shape corresponding to shells3D$mesh_meanspec using geomorph::findMeanSpec meanspec_id<- findMeanSpec(shapes) meanspec_shape <- shapes[,,meanspec_id]  #then get the consensus shape and warp the sample mesh to get the mesh corresponding to the #consensus using Morpho::tps3d meanshape <- consensus(shapes) meanmesh <- tps3d(x = mesh_meanspec , refmat = meanspec_shape, tarmat = meanshape)  #finally, generate morphospace providing template (this function used the mesh warped to #the mean shape of the entire sample, hence the previous lines) mspace(shapes, mag = 1, axes = c(1,2), template = meanmesh, bg.models = \"gray\",        nh = 4, nv = 4, cex.ldm = 0, points = TRUE) }   ##Outline data  #load and extract relevant data and information data(\"shells\") shapes <- shells$shapes$coe  #generate morphospace using all the raw variation mspace(shapes, mag = 1, axes = c(1,2), nh = 5, nv = 4, size.models = 1,        asp.models = 1, bg.model = \"light gray\")"},{"path":"https://millacarmona.github.io/morphospace/reference/phy_prcomp.html","id":null,"dir":"Reference","previous_headings":"","what":"Phylogenetic Principal Component Analysis — phy_prcomp","title":"Phylogenetic Principal Component Analysis — phy_prcomp","text":"wrapper phytools::phyl.pca().","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/phy_prcomp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Phylogenetic Principal Component Analysis — phy_prcomp","text":"","code":"phy_prcomp(x, tree, corr = FALSE, ...)"},{"path":"https://millacarmona.github.io/morphospace/reference/phy_prcomp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Phylogenetic Principal Component Analysis — phy_prcomp","text":"x matrix one variables columns observations rows. Row must named match tip labels phylogenetic tree. tree \"phy\" object containing phylogenetic tree. Tip labels match row names x. corr Logical; whether use correlation instead covariance matrix input. ... arguments passed phytools::phyl.pca().","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/phy_prcomp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Phylogenetic Principal Component Analysis — phy_prcomp","text":"\"phy_prcomp\" object formatted following \"prcomp\"class: $sdev: standard deviations principal components (.e. square roots eigenvalues covariance/correlation matrix). $rotation: matrix eigenvector coefficients. $center: phylogenetic mean (.e. shape estimated root tree). $totvar: sum variances original variables. $lambda, $logL: fitted value lambda log-likelihood model; see phyl.pca.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/phy_prcomp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Phylogenetic Principal Component Analysis — phy_prcomp","text":"Phylogenetic PCA finds linear combination variables (context morphospace generally series shapes arranged 2-margin matrix) maximizing residual variation left removing covariation explained phylogenetic history (.e. reflect covariance correspond star phylogeny). Phylogenetic PCA important differences regular PCA. First, resulting ordination centered around phylogenetic mean (.e. values estimated root tree) instead overall centroid original variables. importantly, phylogenetic PCA's eigenvectors eigenvalues constructed using covariation independent phylogenetic structure. However, orientation scores axes, variances, reflect adjustment. words, orientation phylogenetic PC axes devoid phylogenetic structure, magnitudes measured resulting morphospace (e.g. distances, variances) still retain phylogenetic information. Stemming fact, variances computed using phylogenetic scores differ ones calculated phylogenetic eigenvalues (represent total amount variance among taxa removing covariance accounted phylogeny, although magnitude depends units used measure branch length), necessarily decrease subordinate axes. Also, set phylogenetic scores uncorrelated, meaning can contain redundant information. details, see Polly et al. 2013.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/phy_prcomp.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Phylogenetic Principal Component Analysis — phy_prcomp","text":"Revell, L. J. (2009). Size-correction principal components interspecific comparative studies. Evolution, 63, 3258-3268. Polly, P. D., Lawing, . M., Fabre, . C., & Goswami, . (2013). Phylogenetic principal components analysis geometric morphometrics. Hystrix, 24(1), 33-41. Monteiro, L. R. (2013). Morphometrics comparative method: studying evolution biological shape. Hystrix, Italian Journal Mammalogy, 24(1), 25-32.","code":""},{"path":[]},{"path":"https://millacarmona.github.io/morphospace/reference/phy_prcomp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Phylogenetic Principal Component Analysis — phy_prcomp","text":"","code":"#load data and packages library(geomorph) data(\"tails\")  #compute mean shapes for all species and extract the phylogenetic tree sp_shapes <- consensus(shapes = tails$shapes, index = tails$data$species) tree <- tails$tree  #perform phylogenetic PCA ppca <- phy_prcomp(x = two.d.array(sp_shapes), tree = tree)  #look at the results names(ppca) #the contents of the resulting object #> [1] \"sdev\"     \"rotation\" \"x\"        \"center\"   \"totvar\"   exp_var(ppca) #variance explained by each axis #>         variance cummulative #> phyPC1  75.67476    75.67476 #> phyPC2  21.40326    97.07802 #> phyPC3   1.85156    98.92957 #> phyPC4   0.79018    99.71975 #> phyPC5   0.25384    99.97359 #> phyPC6   0.02137    99.99496 #> phyPC7   0.00504   100.00000 #> phyPC8   0.00000   100.00000 #> phyPC9   0.00000   100.00000 #> phyPC10  0.00000   100.00000 #> phyPC11  0.00000   100.00000 #> phyPC12  0.00000   100.00000 plot(ppca$x) #ordination"},{"path":"https://millacarmona.github.io/morphospace/reference/pile_shapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Pile shapes — pile_shapes","title":"Pile shapes — pile_shapes","text":"Superimpose shapes sample.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/pile_shapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pile shapes — pile_shapes","text":"","code":"pile_shapes(shapes, links = NULL, mshape = TRUE, ...)"},{"path":"https://millacarmona.github.io/morphospace/reference/pile_shapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pile shapes — pile_shapes","text":"shapes Shape data. links optional list indices coordinates defining wireframe (following format used Morpho). mshape Logical; whether plot mean configuration. ... Additional arguments passed plot() rgl::points3d().","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/pile_shapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pile shapes — pile_shapes","text":"","code":"#load 2D landmark data data(\"tails\") shapes <- tails$shapes links <- tails$links  #pile shapes pile_shapes(shapes, mshape = FALSE) #bare  pile_shapes(shapes, mshape = FALSE, links = links) #with links pile_shapes(shapes, mshape = TRUE, links = links) #with links and mean shape    #load 3D landmark data data(\"shells3D\") shapes <- shells3D$shapes  if (FALSE) { #pile shapes pile_shapes(shapes, mshape = FALSE) #bare pile_shapes(shapes, mshape = FALSE, links = list(1:10)) #with false links (just as an example) pile_shapes(shapes, mshape = TRUE, links = list(1:10)) #with false links and mean shape }   #load outline data data(\"shells\") shapes <- shells$shapes links <- shells$links  #pile shapes pile_shapes(shapes, mshape = FALSE) #bare pile_shapes(shapes, mshape = TRUE, links = links) #with mean shape"},{"path":"https://millacarmona.github.io/morphospace/reference/plot_morphogrid2d.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot background 2D shape models — plot_morphogrid2d","title":"Plot background 2D shape models — plot_morphogrid2d","text":"Plot output morphogrid(), 2-dimensional morphometric data. Used internally.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/plot_morphogrid2d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot background 2D shape models — plot_morphogrid2d","text":"","code":"plot_morphogrid2d(   x = NULL,   y = NULL,   morphogrid,   template = NULL,   links = NULL,   datype,   ordtype,   axes,   adj_frame = c(1, 1),   p,   xlab = NULL,   ylab = NULL,   cex.ldm,   col.ldm,   col.models,   lwd.models,   bg.models,   plot = TRUE )"},{"path":"https://millacarmona.github.io/morphospace/reference/plot_morphogrid2d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot background 2D shape models — plot_morphogrid2d","text":"x Optional vector non-morphometric variable plotted x axis. y Optional vector non-morphometric variable plotted y axis. morphogrid object containing output morphogrid. template 2-column matrix containing landmarks/semilandmarks followed coordinates defining curve set curves describing additional aspects morphology, warped using TPS interpolation produce set background shell models(see build_template2d). links list indices coordinates defining wireframe (following format used Morpho). datype Character; type shape data used (\"landm\" \"fcoef\"). ordtype Character; method used multivariate ordination (\"prcomp\", \"bg_prcomp\", \"phy_prcomp\", \"pls_shapes\" \"phy_pls_shapes\"). axes Numeric length 2, indicating axes plotted. adj_frame Numeric length 2, providing posteriori scaling factors width height frame, respectively. p Numeric, indicating number landmarks/semilandmarks used (landmark data ). xlab, ylab Standard arguments passed generic plot function. cex.ldm Numeric; size landmarks/semilandmarks background models. col.ldm color landmarks/semilandmarks background models. col.models color wireframes/outlines. lwd.models Numeric; width lines wireframes/outlines. bg.models Background color outlines. plot Logical; whether plot morphospace.","code":""},{"path":[]},{"path":"https://millacarmona.github.io/morphospace/reference/plot_morphogrid2d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot background 2D shape models — plot_morphogrid2d","text":"","code":"#load data and packages library(geomorph) data(\"tails\")  #perform pca on tails shapes pca <- prcomp(two.d.array(tails$shapes))  #generate grid of shape models sampling the range of variation #at 4 locations (the 4 corners of the scatterplot) shapes_grid <- morphogrid(ordination = pca, axes = c(1,2), datype = \"landm\",                           k = ncol(tails$shapes), p = nrow(tails$shapes),                           nh = 2, nv = 2)  #plot grid plot_morphogrid2d(morphogrid = shapes_grid, links = tails$links,                   datype = \"landm\", ordtype = \"prcomp\",                   axes = c(1,2), p = 9, col.ldm = 1, cex.ldm = 1,                   col.models = 1, lwd.models = 1)  #project each shape in models_arr points(shapes_grid$models_arr[,,1], pch=16, col = 1) points(shapes_grid$models_arr[,,2], pch=16, col = 2) points(shapes_grid$models_arr[,,3], pch=16, col = 3) points(shapes_grid$models_arr[,,4], pch=16, col = 4)"},{"path":"https://millacarmona.github.io/morphospace/reference/plot_morphogrid3d.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot background 3D shape models — plot_morphogrid3d","title":"Plot background 3D shape models — plot_morphogrid3d","text":"Plot output morphogrid(), 3-dimensional morphometric (landmark) data. Used internally.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/plot_morphogrid3d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot background 3D shape models — plot_morphogrid3d","text":"","code":"plot_morphogrid3d(   x = NULL,   y = NULL,   morphogrid,   refshape,   template = NULL,   links = NULL,   ordtype,   axes,   xlim = NULL,   ylim = NULL,   xlab = NULL,   ylab = NULL,   adj_frame = 1,   cex.ldm,   col.ldm,   col.models,   lwd.models,   size.models,   alpha.models = 1,   bg.models,   asp.models,   plot = TRUE )"},{"path":"https://millacarmona.github.io/morphospace/reference/plot_morphogrid3d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot background 3D shape models — plot_morphogrid3d","text":"x Optional vector non-morphometric variable plotted x axis. y Optional vector non-morphometric variable plotted y axis. morphogrid object containing output morphogrid. refshape reference shape (.e., mean landmark configuration) corresponding mesh provided template. template optional \"mesh3d\" object containing geometry structure landmarks placed (3D shape data), corresponding mean shape sample, warped using TPS interpolation produce set background shell models. links list indices coordinates defining wireframe (following format used Morpho). ordtype Character; method used multivariate ordination (\"prcomp\", \"bg_prcomp\", \"phy_prcomp\", \"pls_shapes\" \"phy_pls_shapes\"). axes Numeric length 2, indicating axes plotted. xlim, ylim, xlab, ylab Standard arguments passed generic plot function. adj_frame Numeric length 2, providing posteriori scaling factors width height frame, respectively. cex.ldm Numeric; size landmarks/semilandmarks background models. col.ldm color landmarks/semilandmarks background models. col.models color wireframes/outlines. lwd.models Numeric; width lines wireframes/outlines. size.models Numeric; size factor shape models. alpha.models Numeric; transparency factor background models. bg.models Background color meshes. asp.models Numeric; y/x aspect ratio shape models. plot Logical; whether plot morphospace.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/plot_morphogrid3d.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot background 3D shape models — plot_morphogrid3d","text":"function allows user choose orientation 3D models interactively rotating shape model. close rgl window, minimize actively (just bring back Rstudio front let device get minimized pasively). process morphospace generation rather slow, specially mesh provided template, large number shape models asked, /alpha.models value lower 1.","code":""},{"path":[]},{"path":"https://millacarmona.github.io/morphospace/reference/plot_morphogrid3d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot background 3D shape models — plot_morphogrid3d","text":"","code":"#load data and packages library(geomorph) data(\"shells3D\") shapes <- shells3D$shapes  #perform pca on tails shapes pca <- prcomp(two.d.array(shapes))  #generate grid of shape models sampling the range of variation #at 4 locations (the 4 corners of the scatterplot) shapes_grid <- morphogrid(ordination = pca, axes = c(1,2), datype = \"landm\",                           k = ncol(shapes), p = nrow(shapes),                           nh = 2, nv = 2)  #get meanshape meanshape <- consensus(shapes)  if (FALSE) { #plot grid (shape coordinates only) plot_morphogrid3d(morphogrid = shapes_grid, refshape = meanshape,                   ordtype = \"prcomp\", axes = c(1,2), col.ldm = 1, cex.ldm = 1,                   col.models = 1, lwd.models = 1, bg.models = \"gray\", size.models = 2,                   asp.models = 1)  #get shape corresponding to shells3D$mesh_meanspec using geomorph::findMeanSpec, #then get mesh corresponding to mean shape using Morpho::tps3d meanspec_id<- findMeanSpec(shapes) meanspec_shape <- shapes[,,meanspec_id] meanmesh <- tps3d(x = shells3D$mesh_meanspec , refmat = meanspec_shape, tarmat = meanshape)  #plot grid (includinh mesh template) plot_morphogrid3d(morphogrid = shapes_grid, template = meanmesh, refshape = meanshape,                   ordtype = \"prcomp\", axes = c(1,2), col.ldm = 1, cex.ldm = 1,                   col.models = 1, lwd.models = 1, bg.models = \"gray\", size.models = 2,                   asp.models = 1) }"},{"path":"https://millacarmona.github.io/morphospace/reference/plot_mspace.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot morphospaces and combine them with other elements — plot_mspace","title":"Plot morphospaces and combine them with other elements — plot_mspace","text":"Flexible representation morphospaces, including combination variables phylogeny.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/plot_mspace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot morphospaces and combine them with other elements — plot_mspace","text":"","code":"plot_mspace(   mspace,   axes,   links = NULL,   template = NULL,   x = NULL,   y = NULL,   nh,   nv,   mag,   invax = NULL,   adj_frame = c(1, 1),   points = TRUE,   mshapes = FALSE,   groups = FALSE,   phylo = FALSE,   asp = NA,   xlab,   ylab,   xlim = NULL,   ylim = NULL,   size.models,   asp.models,   rot.models,   col.models,   bg.models,   lwd.models,   alpha.models,   cex.ldm,   col.ldm,   pch.points = 1,   col.points = 1,   cex.points = 1,   col.groups = 1,   pch.groups = 16,   cex.groups = 1,   lwd.branches = 1 )"},{"path":"https://millacarmona.github.io/morphospace/reference/plot_mspace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot morphospaces and combine them with other elements — plot_mspace","text":"mspace \"mspace\" object created using mspace(). axes Numeric length 1 2, indicating axes plotted. links list indices coordinates defining wireframe (following format used Morpho). template Either 2-column matrix containing landmarks/semilandmarks followed coordinates defining curve set curves describing additional aspects morphology (2D shape data) \"mesh3d\" object containing geometry structure landmarks placed (3D shape data), corresponding mean shape sample. warped using TPS interpolation produce set background shell models (see build_template2d). x Optional vector non-morphometric variable plotted x axis. Alternatively, \"phy\" object can provided. y Optional vector non-morphometric variable plotted y axis. Alternatively, \"phy\" object can provided. nh Numeric; number shape models along x axis. nv Numeric; number shape models along y axis. mag Numeric; magnifying factor shape models. invax Optional numeric indicating axes provided axes needs inverted (optionsare 1, 2 c(1,2)). adj_frame Numeric length 2, providing posteriori scaling factors width height frame, respectively. points Logical; whether plot scatter points corresponding sampled shapes stored mspace$x. mshapes Logical; whether plot scatter points corresponding groups' mean shapes stored mspace$gr_centroids. groups Logical; whether plot convex hulls enclosing groups stored mspace$gr_class phylo Logical; whether plot phylogenetic relationships stored mspace$phylo xlim, ylim, xlab, ylab, asp Standard arguments passed generic plot function. size.models Numeric; size factor shape models. asp.models Numeric; y/x aspect ratio shape models. rot.models Numeric; angle (degrees) rotate shape models. col.models color wireframes/outlines. bg.models Background color outlines/meshes. lwd.models Numeric; width lines wireframes/outlines. alpha.models Numeric; transparency factor background models (3D ). cex.ldm Numeric; size landmarks/semilandmarks background models. col.ldm color landmarks/semilandmarks background models. pch.points Numeric; symbol scatter points corresponding sampled shapes. col.points color scatter points corresponding sampled shapes. cex.points Numeric; size scatter points corresponding sampled shapes. col.groups color scatter points corresponding groups mean shapes. pch.groups Numeric; symbol scatter points corresponding groups mean shapes. cex.groups Numeric; size scatter points corresponding groups mean shapes. lwd.branches Numeric; width lines depicting phylogenetic branches.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/plot_mspace.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot morphospaces and combine them with other elements — plot_mspace","text":"function allows plot morphospace contained mspace objects already existence, either preserving graphical attributes stamped pipeline modifying one , need execute pipeline every time morphospaces need visualized /changed. Also, plot_mspace expands range graphical options available beyond 'pure' morphospaces. numeric non-shape variable (assumed measured specimens mspace$x) feeded one x y, 'hybrid' morphospace produced (.e. bivariate plot constructed combination x y morphometric axis; shape models background represent variation latter). instead \"phy\" object (assumed describe phylogenetic relationships among tips scores stored mspace$phylo_scores) feeded one x y, vertical horizontal phenogram deployed (x/y axis range correspond branch lengths, caution exercised interpreting output).","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/plot_mspace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot morphospaces and combine them with other elements — plot_mspace","text":"","code":"#load and extract relevant data, packages and information library(magrittr) data(\"tails\") shapes <- tails$shapes species <- tails$data$species sizes <- tails$sizes sp_shapes <- consensus(shapes, species) sp_sizes <- cbind(tapply(sizes, species, mean)) tree <- tails$tree links <- tails$links  #generate basic morphospace, add sampled shapes, species mean shapes, species #classification, and phylogenetic structure msp <- mspace(shapes, axes = c(1,2), plot = FALSE) %>%  proj_shapes(shapes = shapes) %>%  proj_consensus(shapes = sp_shapes) %>%  proj_groups(groups = species) %>%  proj_phylogeny(tree = tree) #> Error in plot.xy(xy.coords(x, y), type = type, ...): plot.new has not been called yet  ##Plotting 'pure' morphospaces:  #plot mspace object as it is plot_mspace(msp, axes = c(1,2),             points = TRUE, groups = FALSE, mshapes = FALSE, phylo = FALSE) #> Error in get(supplied[i]): object 'msp' not found  #add colors for points, by species plot_mspace(msp, axes = c(1,2), col.points = species, col.groups = 1:nlevels(species),             points = TRUE, groups = FALSE, mshapes = FALSE, phylo = FALSE) #> Error in get(supplied[i]): object 'msp' not found  #add links plot_mspace(msp, axes = c(1,2), links = links,             col.points = species, col.groups = 1:nlevels(species),             points = TRUE, groups = FALSE, mshapes = FALSE, phylo = FALSE) #> Error in get(supplied[i]): object 'msp' not found  #change number and sizes of shape models in the background plot_mspace(msp, axes = c(1,2), nh = 2, nv = 2, links = links, size.models = 0.5,             col.points = species, col.groups = 1:nlevels(species),             points = TRUE, groups = FALSE, mshapes = FALSE, phylo = FALSE) #> Error in get(supplied[i]): object 'msp' not found  #magnify deformation and highlight landmarks plot_mspace(msp, axes = c(1,2), mag = 1.5, nh = 2, nv = 2, links = links, size.models = 0.5,             col.points = species, col.groups = 1:nlevels(species), cex.ldm = 5, col.ldm = \"red\",             points = TRUE, groups = FALSE, mshapes = FALSE, phylo = FALSE) #> Error in get(supplied[i]): object 'msp' not found  #change axes 1,2 for 1,3 plot_mspace(msp, axes = c(1,3), mag = 1.5, nh = 2, nv = 2, links = links, size.models = 0.5,             col.points = species, col.groups = 1:nlevels(species), cex.ldm = 5, col.ldm = \"red\",             points = TRUE, groups = FALSE, mshapes = FALSE, phylo = FALSE) #> Error in get(supplied[i]): object 'msp' not found  #represent ranges and centroids of groups plot_mspace(msp, axes = c(1,3), mag = 1.5, nh = 2, nv = 2, links = links, size.models = 0.5,             col.points = species, col.groups = 1:nlevels(species), cex.ldm = 5, col.ldm = \"red\",             points = TRUE, groups = TRUE, mshapes = TRUE, phylo = FALSE) #> Error in get(supplied[i]): object 'msp' not found  #add phylogeny plot_mspace(msp, axes = c(1,3), mag = 1.5, nh = 2, nv = 2, links = links, size.models = 0.5,             col.points = species, col.groups = 1:nlevels(species), cex.ldm = 5, col.ldm = \"red\",             points = TRUE, groups = TRUE, mshapes = TRUE, phylo = TRUE) #> Error in get(supplied[i]): object 'msp' not found    ##Plotting 'hybrid' morphospaces:  #plot size against first PC plot_mspace(msp, x = sizes,  axes = 1, links = links, col.points = species,             col.groups = 1:nlevels(species), pch.points = 16,             points = TRUE, groups = FALSE, mshapes = FALSE, phylo = FALSE, xlab = \"Centroid size\") #> Error in get(supplied[i]): object 'msp' not found    ##Plotting phenograms:  #plot horizontal phenogram against PC1 plot_mspace(msp, x = tree,  axes = 1, links = links, col.points = species,             col.groups = 1:nlevels(species), pch.points = 16,             points = TRUE, groups = FALSE, mshapes = FALSE, phylo = FALSE, xlab = \"Branch lengths\") #> Error in get(supplied[i]): object 'msp' not found  #plot horizontal phenogram against PC1 plot_mspace(msp, y = tree,  axes = 2, links = links, col.points = species,             col.groups = 1:nlevels(species), pch.points = 16,             points = TRUE, groups = FALSE, mshapes = FALSE, phylo = FALSE, ylab = \"Branch lengths\") #> Error in get(supplied[i]): object 'msp' not found"},{"path":"https://millacarmona.github.io/morphospace/reference/plot_phenogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot phenogram — plot_phenogram","title":"Plot phenogram — plot_phenogram","text":"Plot phenogram using phylogenetic morphometric information. Used internally.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/plot_phenogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot phenogram — plot_phenogram","text":"","code":"plot_phenogram(   x = NULL,   y = NULL,   tree,   phylo_scores,   axes,   lwd.branches,   cex.groups,   col.groups,   points )"},{"path":"https://millacarmona.github.io/morphospace/reference/plot_phenogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot phenogram — plot_phenogram","text":"x Optional vector non-morphometric variable plotted x axis. y Optional vector non-morphometric variable plotted y axis. tree \"phy\" object containing phylogenetic tree. Tip labels match row names x y. phylo_scores matrix containing scores tips nodes phylogeny provided tree. axes Numeric length 2, indicating axes plotted. lwd.branches Numeric; width lines depicting phylogenetic branches. cex.groups Numeric; size scatter points corresponding groups mean shapes. col.groups color scatter points corresponding groups mean shapes. points Logical; whether plot scatter points.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/plot_phenogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot phenogram — plot_phenogram","text":"","code":"#load and extract relevant data, packages and information library(magrittr) data(\"tails\") shapes <- tails$shapes species <- tails$data$species sp_shapes <- consensus(shapes, species) tree <- tails$tree links <- tails$links  #generate basic morphospace, add sampled shapes, species mean shapes, and #phylogenetic structure msp <- mspace(shapes, mag = 0.7, axes = c(1,2), cex.ldm = 0, plot = FALSE) %>%   proj_shapes(shapes = shapes, col = c(1:13)[species], pch = 1, cex = 0.7) %>%   proj_consensus(shapes = sp_shapes, pch = 21, bg = 1:13, cex = 2) %>%   proj_phylogeny(tree = tree) #> Error in plot.xy(xy.coords(x, y), type = type, ...): plot.new has not been called yet  #get node heights heights <- phytools::nodeHeights(tree) node_heights <- c(rep(max(heights), length(tree$tip.label)), unique(heights[,1]))  #plot simple phengram plot(node_heights, msp$phylo_scores[,1]) #> Error in xy.coords(x, y, xlabel, ylabel, log): object 'msp' not found plot_phenogram(tree = tree, x = node_heights, phylo_scores = msp$phylo_scores,                axes = 1, lwd.branches = 1, cex.groups = 1, col.groups = 1, points = TRUE) #> Error in cbind(x, phylo_scores[, axes[1]], y): object 'msp' not found"},{"path":"https://millacarmona.github.io/morphospace/reference/pls2b.html","id":null,"dir":"Reference","previous_headings":"","what":"Two-blocks Partial Least Squares — pls2b","title":"Two-blocks Partial Least Squares — pls2b","text":"Performs phylogenetic 2B Partial Least Squares allowing leave-one-cross-validation removal phylogenetic covariation (experimental).","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/pls2b.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Two-blocks Partial Least Squares — pls2b","text":"","code":"pls2b(x, y, tree = NULL, LOOCV = FALSE, recompute = FALSE)"},{"path":"https://millacarmona.github.io/morphospace/reference/pls2b.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Two-blocks Partial Least Squares — pls2b","text":"x matrix one variables columns observations rows, representing first block. y matrix one variables columns observations rows, representing second block. tree \"phy\" object containing phylogenetic tree. Tip labels match row number names x y. LOOCV Logical; whether apply leave-one-cross-validation. recompute Logical; whether re-compute rotation matrix using scores resulting LOOCV.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/pls2b.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Two-blocks Partial Least Squares — pls2b","text":"\"pls2b\" \"phy_pls2b\" object, containing: $values: vector singular values accounting covariation among blocks explained par axes. $xrotation: matrix vector coefficients first block. $yrotation: matrix vector coefficients second block. $xcenter: mean values original variables first block (phylogenetic mean, tree provided). $ycenter: mean values original variables second block (phylogenetic mean, tree provided). $xtotvar: sum variances original variables second block. $ytotvar: sum variances original variables second block.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/pls2b.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Two-blocks Partial Least Squares — pls2b","text":"Starting two blocks variables measured cases, two-blocks PLS finds linear combination variables block maximizing covariation variables . context morphospace, one blocks usually series shapes arranged 2-margins matrix. reported PLS (algebraic equivalent bgPCA) produces spurious covariation blocks number variables exceeds number observations (common situation geometric morphometrics analyses). problem can alleviated carrying leave-one-cross-validation (LOOCV; .e. observation excluded calculation PLS axes projection resulting ordination way calculate score). tree supplied, rows x y assumed linked phylogenetic relationships. case, resulting axes maximize residual covariation among blocks left removing covariation among blocks accounted phylogenetic history (assuming Brownian model evolution 100% phylogenetic signal, equivalent setting method = \"BM\" phytools::phyl.pca()). phylogenetic version pls2b displays variational properties phylogenetic PCA (.e. centering phylogenetic mean; orientation scores reflect non-phylogenetic covariation variance scaled thus contain phylogenetic information; latter reason, variance scores eigenvalues differ; scores correlated; etc; see Polly et al. 2013).","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/pls2b.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Two-blocks Partial Least Squares — pls2b","text":"Rohlf, F. J., & Corti, M. (2000). Use two-block partial least-squares study covariation shape. Systematic Biology, 49(4), 740-753. Zelditch, M. L., Swiderski, D. L., & Sheets, H. D. (2012). Geometric morphometrics biologists: primer. 2nd ed. Academic Press. Polly, P. D., Lawing, . M., Fabre, . C., & Goswami, . (2013). Phylogenetic principal components analysis geometric morphometrics. Hystrix, 24(1), 33. Monteiro, L. R. (2013). Morphometrics comparative method: studying evolution biological shape. Hystrix, Italian Journal Mammalogy, 24(1), 25-32. Bookstein, F. L. (2019). Pathologies -groups principal components analysis geometric morphometrics. Evolutionary Biology, 46(4), 271-302.","code":""},{"path":[]},{"path":"https://millacarmona.github.io/morphospace/reference/pls2b.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Two-blocks Partial Least Squares — pls2b","text":"","code":"#load data and packages library(geomorph) data(\"tails\")  #extract mean log sizes and shapes for all species, as well as the phylogenetic tree shapes <- tails$shapes sizes <- log(tails$sizes) sp_shapes <- consensus(shapes = shapes, index = tails$data$species) sp_sizes <- tapply(X = sizes, INDEX = tails$data$species, FUN = mean) tree <- tails$tree  #perform PLS between shape and size pls <- pls2b(y = two.d.array(shapes), x = sizes)  #look at the results names(pls) #the contents of the resulting object #> [1] \"yscores\"   \"yrotation\" \"ycenter\"   \"ytotvar\"   \"xscores\"   \"xrotation\" #> [7] \"xcenter\"   \"xtotvar\"   \"values\"    plot(pls$xscores, pls$yscores) #ordination   #pls_shapes achieves identical results, but it is formatted to be used more #easily when analyzing shape variables and its output is compatible with other #functions from morphospace pls2 <- pls_shapes(shapes = shapes, X = sizes)  names(pls2) #the contents of the resulting object #> [1] \"sdev\"     \"rotation\" \"x\"        \"x2\"       \"center\"   \"totvar\"   exp_var(pls2) #variance explained by each axis #>       variance cummulative #> PLS-1 74.05123    74.05123 plot(pls2$x2, pls2$x) #ordination     #perform phylogenetic PLS ppls <- pls2b(y = two.d.array(sp_shapes), x = sp_sizes, tree = tree)  #look at the results names(ppls) #the contents of the resulting object #> [1] \"yscores\"   \"yrotation\" \"ycenter\"   \"ytotvar\"   \"xscores\"   \"xrotation\" #> [7] \"xcenter\"   \"xtotvar\"   \"values\"    plot(ppls$xscores, ppls$yscores) #ordination    #pls_shapes achieves identical results, but it is formatted to be used more #easily when analyzing shape variables and its output is compatible with other #functions from morphospace ppls2 <- pls_shapes(shapes = sp_shapes, X = sp_sizes, tree = tree)  names(ppls2) #the contents of the resulting object #> [1] \"sdev\"     \"rotation\" \"x\"        \"x2\"       \"center\"   \"totvar\"   exp_var(ppls2) #variance explained by each axis #>          variance cummulative #> phyPLS-1 75.04955    75.04955 plot(ppls2$x2, ppls2$x) #ordination"},{"path":"https://millacarmona.github.io/morphospace/reference/pls_shapes.html","id":null,"dir":"Reference","previous_headings":"","what":"2B Partial Least Squares for shape data — pls_shapes","title":"2B Partial Least Squares for shape data — pls_shapes","text":"wrapper pls2b() aimed specifically synthesizing covariation shape data external, non-shape variable(s).","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/pls_shapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"2B Partial Least Squares for shape data — pls_shapes","text":"","code":"pls_shapes(X, shapes, tree = NULL, LOOCV = FALSE, recompute = FALSE)"},{"path":"https://millacarmona.github.io/morphospace/reference/pls_shapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"2B Partial Least Squares for shape data — pls_shapes","text":"X matrix variables columns observations rows, representing external variables supervise ordination (corresponding first block). shapes Shape data (corresponding second block pls2b. tree \"phy\" object containing phylogenetic tree. Tip labels match row number names x y. LOOCV Logical; whether apply leave-one-cross-validation. recompute Logical; whether re-compute rotation matrix using scores resulting LOOCV.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/pls_shapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"2B Partial Least Squares for shape data — pls_shapes","text":"\"pls_shapes\" \"phy_pls_shapes\" object formatted following \"prcomp\" class: $sdev: standard deviation PLS axis/axis shape block. $rotation: matrix vector coefficients shape block. $center: mean values original variables shape block. $totvar: sum variances original variables shape block. $x2: scores supervizing block (.e. x scores.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/pls_shapes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"2B Partial Least Squares for shape data — pls_shapes","text":"function finds linear combination maximizing covariation block variables assumed shape variables formatted 2-margins matrix another block can either another set shape variables one non-shape variables supervizing analysis. phylogenetic tree supplied, observations x shapes blocks treated data measured tips. reported PLS (algebraic equivalent bgPCA) produces spurious covariation blocks number variables exceeds number observations (common situation geometric morphometrics analyses). problem can alleviated carrying leave-one-cross-validation (LOOCV; .e. observation excluded calculation PLS axes projection resulting ordination way calculate score).","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/pls_shapes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"2B Partial Least Squares for shape data — pls_shapes","text":"Rohlf, F. J., & Corti, M. (2000). Use two-block partial least-squares study covariation shape. Systematic Biology, 49(4), 740-753. Zelditch, M. L., Swiderski, D. L., & Sheets, H. D. (2012). Geometric morphometrics biologists: primer. 2nd ed. Academic Press. Bookstein, F. L. (2019). Pathologies -groups principal components analysis geometric morphometrics. Evolutionary Biology, 46(4), 271-302.","code":""},{"path":[]},{"path":"https://millacarmona.github.io/morphospace/reference/pls_shapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"2B Partial Least Squares for shape data — pls_shapes","text":"","code":"#load data data(\"tails\")  #extract shapes and sizes, compute mean shapes and sizes for all species, extract tree shapes <- tails$shapes sizes <- log(tails$sizes) sp_shapes <- consensus(shapes, tails$data$species) sp_sizes <- tapply(X = log(sizes), INDEX = tails$data$species, FUN = mean) tree <- tails$tree  #perform PLS between shape and size pls <- pls_shapes(shapes = shapes, X = sizes)  #inspect results names(pls) #the contents of the resulting object #> [1] \"sdev\"     \"rotation\" \"x\"        \"x2\"       \"center\"   \"totvar\"   exp_var(pls) #variance explained by each axis #>       variance cummulative #> PLS-1 74.05123    74.05123 plot(pls$x2, pls$x) #ordination   #perform PLS between shape and size with leave-one-out CV pls_cv <- pls_shapes(shapes = shapes, X = sizes, LOOCV = TRUE)  #inspect results names(pls_cv) #the contents of the resulting object #> [1] \"sdev\"     \"rotation\" \"x\"        \"x2\"       \"center\"   \"totvar\"   exp_var(pls_cv) #variance explained by each axis #>       variance cummulative #> PLS-1 73.48807    73.48807 plot(pls_cv$x2, pls_cv$x) #ordination   #perform phylogenetic PLS between shape and size (for species means) ppls <- pls_shapes(shapes = sp_shapes, X = sp_sizes, tree = tree)  #inspect results names(ppls) #the contents of the resulting object #> [1] \"sdev\"     \"rotation\" \"x\"        \"x2\"       \"center\"   \"totvar\"   exp_var(ppls) #variance explained by each axis #>          variance cummulative #> phyPLS-1 75.10454    75.10454 plot(ppls$x2, ppls$x) #ordination   #perform phylogenetic PLS between shape and size with leave-one-out CV ppls <- pls_shapes(shapes = sp_shapes, X = sp_sizes, tree = tree, LOOCV = TRUE)  #inspect results names(ppls) #the contents of the resulting object #> [1] \"sdev\"     \"rotation\" \"x\"        \"x2\"       \"center\"   \"totvar\"   exp_var(ppls) #variance explained by each axis #>          variance cummulative #> phyPLS-1  49.9805     49.9805 plot(ppls$x2, ppls$x) #ordination"},{"path":"https://millacarmona.github.io/morphospace/reference/proj_axis.html","id":null,"dir":"Reference","previous_headings":"","what":"Project morphometric axis into morphospace — proj_axis","title":"Project morphometric axis into morphospace — proj_axis","text":"Project one morphometric axes (.e., linear combinations shape variables) existing morphospace.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/proj_axis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Project morphometric axis into morphospace — proj_axis","text":"","code":"proj_axis(obj, mspace, axis = 1, mag = 1, pipe = TRUE, ...)"},{"path":"https://millacarmona.github.io/morphospace/reference/proj_axis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Project morphometric axis into morphospace — proj_axis","text":"obj object containing either multivariate ordination class \"prcomp\", \"bg_prcomp\", \"phy_prcomp\" \"pls_shape\" \"mlm\" object fitted using lm(). mspace \"mspace\" object. axis optional vector indicating axis obj projected. mag Numeric; magnifying factor representing shape transformation. pipe Logical; function included pipe? ... arguments passed lines().","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/proj_axis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Project morphometric axis into morphospace — proj_axis","text":"plot device morphospace open, straight line marking scores representing shapes extremes morphometric axis projected morphospace. pipe = FALSE scores returned invisibly. pipe = TRUE feeded mspace object returned unchanged invisibly.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/proj_axis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Project morphometric axis into morphospace — proj_axis","text":"function primarily aimed graphical representation morphometric axes (estimated using either linear models multivariate ordination methods) existing morphospace heuristic exploration patterns data. can also used extract theoretical shapes extremes axes, although ax_transformation() thing flexible straightforward way. Axes computed linear models supervised multivariate ordinations using supervising variable usually differ length (.e. shape transformations magnified attenuated) due assumption former explanatory variable measured without error. Also, former necessarily centered. statistical analysis axes (e.g., trajectory analysis) vector coefficients can extracted directly slope coefficients stored mlm objects eigenvector coefficients stored $rotation slot returned multivariate ordination methods.","code":""},{"path":[]},{"path":"https://millacarmona.github.io/morphospace/reference/proj_axis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Project morphometric axis into morphospace — proj_axis","text":"","code":"#load and extract relevant data, packages and information library(magrittr) library(geomorph) data(\"tails\") shapes <- tails$shapes logsizes <- log(tails$sizes) species <- tails$data$species links <- tails$links  #compute intraspecific allometric axis detrend_shapes, using lm and pls_shapes detr_shapes <- arrayspecs(   detrend_shapes(lm(two.d.array(shapes) ~ species)),                           p = 9, k = 2) intrasp_allo_mod <- lm(two.d.array(detr_shapes) ~ logsizes) intrasp_allo_pls <- pls_shapes(shapes = two.d.array(detr_shapes), X = logsizes)  #compute intraspecific allometric axis using consensus, tapply, lm and pls_shapes sp_shapes <- consensus(shapes, species) sp_logsizes <- tapply(logsizes, species, max) intersp_allo_mod <- lm(two.d.array(sp_shapes) ~ sp_logsizes) intersp_allo_pls <- pls_shapes(shapes = two.d.array(sp_shapes), X = sp_logsizes)   #generate basic morphospace, add intraspecific (red) and interspecific (blue) axes #for lm models mspace(shapes, links = links, mag = 0.7, axes = c(1,2)) %>%   proj_axis(obj = intrasp_allo_mod, col = \"red\", lwd = 2) %>%   proj_axis(obj = intersp_allo_mod, col = \"blue\", lwd = 2)  #for pls ordination mspace(shapes, links = links, mag = 0.7, axes = c(1,2)) %>%   proj_axis(obj = intrasp_allo_pls, col = \"red\", lwd = 2) %>%   proj_axis(obj = intersp_allo_pls, col = \"blue\", lwd = 2)"},{"path":"https://millacarmona.github.io/morphospace/reference/proj_consensus.html","id":null,"dir":"Reference","previous_headings":"","what":"Project consensus shape(s) into morphospace — proj_consensus","title":"Project consensus shape(s) into morphospace — proj_consensus","text":"Project one mean shapes existing morphospace.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/proj_consensus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Project consensus shape(s) into morphospace — proj_consensus","text":"","code":"proj_consensus(shapes, mspace, pipe = TRUE, ...)"},{"path":"https://millacarmona.github.io/morphospace/reference/proj_consensus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Project consensus shape(s) into morphospace — proj_consensus","text":"shapes Shapes data. mspace \"mspace\" object. pipe Logical; function included pipe? ... arguments passed points().","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/proj_consensus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Project consensus shape(s) into morphospace — proj_consensus","text":"plot device morphospace open, shapes feeded shapes projected morphospace. pipe = FALSE corresponding scores returned invisibly. pipe = TRUE supplied mspace object modified adding new $gr_centroids slot, returned invisibly.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/proj_consensus.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Project consensus shape(s) into morphospace — proj_consensus","text":"purpose function add scores corresponding groups' mean shapes mspace objects pipeline. Otherwise, proj_shapes.","code":""},{"path":[]},{"path":"https://millacarmona.github.io/morphospace/reference/proj_consensus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Project consensus shape(s) into morphospace — proj_consensus","text":"","code":"#load and extract relevant data, packages and information library(magrittr) data(\"shells\") shapes <- shells$shapes species <- shells$data$species sp_shapes <- consensus(shapes, species)  #generate basic morphospace, add sampled and consensus shapes mspace(shapes, mag = 0.7, axes = c(1,2), bg.model = \"light gray\") %>%   proj_shapes(shapes = shapes, col = c(1:4)[species], pch = 1, cex = 0.7) %>%   proj_consensus(shapes = sp_shapes, pch = 21, bg = 1:4, cex = 2)"},{"path":"https://millacarmona.github.io/morphospace/reference/proj_eigen.html","id":null,"dir":"Reference","previous_headings":"","what":"Project cases into existing eigenanalysis-based ordination — proj_eigen","title":"Project cases into existing eigenanalysis-based ordination — proj_eigen","text":"Project variables original scale existing ordination. Used internally.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/proj_eigen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Project cases into existing eigenanalysis-based ordination — proj_eigen","text":"","code":"proj_eigen(x, vectors, center)"},{"path":"https://millacarmona.github.io/morphospace/reference/proj_eigen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Project cases into existing eigenanalysis-based ordination — proj_eigen","text":"x matrix original variables used ordination columns, observations rows. vectors matrix eigenvector coefficients used build ordination. center vector mean values original variables used ordination.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/proj_eigen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Project cases into existing eigenanalysis-based ordination — proj_eigen","text":"2-margins matrix scores supplied vector(s).","code":""},{"path":[]},{"path":"https://millacarmona.github.io/morphospace/reference/proj_eigen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Project cases into existing eigenanalysis-based ordination — proj_eigen","text":"","code":"#' #load data and packages library(geomorph) data(\"tails\")  #perform principal component analysis on tails data pca <- prcomp(two.d.array(tails$shapes))  #get project shapes in the pca ordination shapes_mat <- two.d.array(tails$shapes) newscores <- proj_eigen(x = shapes_mat,                         vectors = pca$rotation,                         center = pca$center)  #plot and compare plot(pca$x, pch = 16, col = \"gray\") points(newscores, col = \"black\")  #compute and project species' mean shapes meanshapes_arr <- consensus(tails$shapes, index = tails$data$species) meanshapes_mat <- two.d.array(meanshapes_arr) meanscores <- proj_eigen(x = meanshapes_mat,                         vectors = pca$rotation,                         center = pca$center) points(meanscores, pch = 21, bg = \"red\", cex = 1.5)"},{"path":"https://millacarmona.github.io/morphospace/reference/proj_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"Delimit groups in morphospace — proj_groups","title":"Delimit groups in morphospace — proj_groups","text":"Project convex hulls ennclosing priori groups existing morphospace.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/proj_groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delimit groups in morphospace — proj_groups","text":"","code":"proj_groups(mspace, shapes = NULL, groups, pipe = TRUE, ...)"},{"path":"https://millacarmona.github.io/morphospace/reference/proj_groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delimit groups in morphospace — proj_groups","text":"mspace \"mspace\" object. shapes Optional shapes data. groups Factor; classification observations groups. pipe Logical; function included pipe? ... arguments passed hulls_by_group_2D().","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/proj_groups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delimit groups in morphospace — proj_groups","text":"plot device morphospace open, convex hulls enclosing scores corresponding groups projected morphospace. pipe = TRUE supplied mspaceobject modified adding new $gr_class slot, returned invisibly.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/proj_groups.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Delimit groups in morphospace — proj_groups","text":"purpose function add classification shapes populating morphospace mspace objects pipeline, well facilitate group visualization. Otherwise, just wrapper hulls_by_group_2D.","code":""},{"path":[]},{"path":"https://millacarmona.github.io/morphospace/reference/proj_groups.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delimit groups in morphospace — proj_groups","text":"","code":"#load and extract relevant data, packages and information library(magrittr) data(\"shells\") shapes <- shells$shapes species <- shells$data$species sp_shapes <- consensus(shapes, species)  #generate basic morphospace, add sampled shapes and convex hulls for species mspace(shapes, links = links, mag = 0.7, axes = c(1,2), bg.model = \"light gray\") %>%   proj_shapes(shapes = shapes, col = c(1:4)[species], pch = 1) %>%   proj_groups(groups = species, col = 1:4, lwd = 2)"},{"path":"https://millacarmona.github.io/morphospace/reference/proj_phylogeny.html","id":null,"dir":"Reference","previous_headings":"","what":"Project phylogenetic structure into morphospace — proj_phylogeny","title":"Project phylogenetic structure into morphospace — proj_phylogeny","text":"Project phylogenetic relationships among set shapes (representing consensuses phhylogenetic terminals) existing morphospace.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/proj_phylogeny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Project phylogenetic structure into morphospace — proj_phylogeny","text":"","code":"proj_phylogeny(tree, mspace, pipe = TRUE, ...)"},{"path":"https://millacarmona.github.io/morphospace/reference/proj_phylogeny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Project phylogenetic structure into morphospace — proj_phylogeny","text":"tree \"phy\" object containing phylogenetic tree. mspace \"mspace\" object. pipe Logical; function included pipe? ... arguments passed lines().","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/proj_phylogeny.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Project phylogenetic structure into morphospace — proj_phylogeny","text":"plot device morphospace open, shapes representing nodes phylogenetic tree lines connecting tips projected morphospace. pipe = FALSE scores nodes tips phylogeny returned invisibly. pipe = TRUE supplied mspaceobject modified adding new $phylo_scores $phyloslots, returned invisibly.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/proj_phylogeny.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Project phylogenetic structure into morphospace — proj_phylogeny","text":"purpose function twofold. First, meant transform morphospace phylomorphospace infusing  phylogenetic structure former. end, $gr_centroids slot matching tip labels tree needs present (either upstream pipeline already incorporated existing mspace object). Second, function can used retrieve scores corresponding nodes phylogenetic tree, can turn used compute associated shapes using rev_eigen(). position shapes morphospace estimated using squared-changes parsimony algorithm performed fastAnc phytools.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/proj_phylogeny.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Project phylogenetic structure into morphospace — proj_phylogeny","text":"","code":"#load and extract relevant data, packages and information library(magrittr) data(\"tails\") shapes <- tails$shapes species <- tails$data$species sp_shapes <- consensus(shapes, species) tree <- tails$tree links <- tails$links  #generate basic morphospace, add sampled shapes, species mean shapes, and #phylogenetic structure mspace(shapes, links = links, mag = 0.7, axes = c(1,2), cex.ldm = 0) %>%   proj_shapes(shapes = shapes, col = c(1:13)[species], pch = 1, cex = 0.7) %>%   proj_consensus(shapes = sp_shapes, pch = 21, bg = 1:13, cex = 2) %>%   proj_phylogeny(tree = tree)"},{"path":"https://millacarmona.github.io/morphospace/reference/proj_shapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Project shapes into morphospace — proj_shapes","title":"Project shapes into morphospace — proj_shapes","text":"Project set shapes existing morphospace.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/proj_shapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Project shapes into morphospace — proj_shapes","text":"","code":"proj_shapes(shapes, mspace, pipe = TRUE, ...)"},{"path":"https://millacarmona.github.io/morphospace/reference/proj_shapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Project shapes into morphospace — proj_shapes","text":"shapes Shape data. mspace \"mspace\" object. pipe Logical; function included pipe? ... arguments passed points().","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/proj_shapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Project shapes into morphospace — proj_shapes","text":"plot device morphospace open, shapes feeded shapes projected morphospace. pipe = FALSEthose scores returned invisibly. pipe = TRUE feeded mspace object returned unchanged invisibly.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/proj_shapes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Project shapes into morphospace — proj_shapes","text":"purpose function mantain morphospace generation sample representation independent affairs, add flexibility graphical representation scatter points.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/proj_shapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Project shapes into morphospace — proj_shapes","text":"","code":"#load and extract relevant data, packages and information library(magrittr) data(\"wings\") shapes <- wings$shapes cactus <- wings$data$sex species <- wings$data$species template <- wings$template  #generate basic morphospace, add sampled shapes mspace(shapes, template = template, mag = 0.7, axes = c(1,2)) %>%   proj_shapes(shapes = shapes) #> Error in shapes_mat(shapes): object 'data2d' not found  #change colors, symbols, etc for the scatter mspace(shapes, template = template, mag = 0.7, axes = c(1,2)) %>%   proj_shapes(shapes = shapes[,,species == \"Db\"],  col = c(\"green\"),               pch = c(1,16)[cactus[species == \"Db\"]]) %>%   proj_shapes(shapes = shapes[,,species == \"Dk\"],  col = c(\"blue\"),               pch = c(1,16)[cactus[species == \"Dk\"]]) #> Error in shapes_mat(shapes): object 'data2d' not found"},{"path":"https://millacarmona.github.io/morphospace/reference/rev_eigen.html","id":null,"dir":"Reference","previous_headings":"","what":"Reverse eigenanalysis-based ordination — rev_eigen","title":"Reverse eigenanalysis-based ordination — rev_eigen","text":"Back-calculate variables original scale existing ordination data. Used internally.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/rev_eigen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reverse eigenanalysis-based ordination — rev_eigen","text":"","code":"rev_eigen(scores, vectors, center)"},{"path":"https://millacarmona.github.io/morphospace/reference/rev_eigen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reverse eigenanalysis-based ordination — rev_eigen","text":"scores matrix scores resulting ordination. vectors matrix eigenvector coefficients used build ordination. center vector mean values original variables used ordination.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/rev_eigen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reverse eigenanalysis-based ordination — rev_eigen","text":"2-margins matrix variables original scale.","code":""},{"path":[]},{"path":"https://millacarmona.github.io/morphospace/reference/rev_eigen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reverse eigenanalysis-based ordination — rev_eigen","text":"","code":"#load data and packages library(Morpho) library(geomorph) data(\"tails\")  #perform principal component analysis on tails data pca <- prcomp(two.d.array(tails$shapes))  #transform the scores back to shapes backshapes_mat <- rev_eigen(scores = pca$x,                             vectors = pca$rotation,                             center = pca$center) backshapes_arr <- arrayspecs(backshapes_mat, k = 2, p = 9)  #compare pile_shapes(tails$shapes)  pile_shapes(backshapes_arr)   #obtain shapes at the extremes of PC1 extshapes_mat <- rev_eigen(scores = range(pca$x[,1]),                            vectors = pca$rotation[,1],                            center = pca$center) extshapes_arr <- arrayspecs(extshapes_mat, k = 2, p = 9)  #plot and compare plot(extshapes_arr[,,1]) lineplot(extshapes_arr[,,1], tails$links) ; title(\"negative\")  plot(extshapes_arr[,,2]) lineplot(extshapes_arr[,,2], tails$links) ; title(\"positive\")"},{"path":"https://millacarmona.github.io/morphospace/reference/rotate_fcoef.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotate Fourier shape 180 degrees — rotate_fcoef","title":"Rotate Fourier shape 180 degrees — rotate_fcoef","text":"Correct 180-degrees spurious rotation closed outline shapes. Used internally.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/rotate_fcoef.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotate Fourier shape 180 degrees — rotate_fcoef","text":"","code":"rotate_fcoef(fcoef)"},{"path":"https://millacarmona.github.io/morphospace/reference/rotate_fcoef.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotate Fourier shape 180 degrees — rotate_fcoef","text":"fcoef set Fourier coefficients measuring shape(s) rotated.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/rotate_fcoef.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rotate Fourier shape 180 degrees — rotate_fcoef","text":"set Fourier coefficients describing rotated outline(s).","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/rotate_fcoef.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Rotate Fourier shape 180 degrees — rotate_fcoef","text":"Iwata, H., & Ukai, Y. (2002). SHAPE: computer program package quantitative evaluation biological shapes based elliptic Fourier descriptors. Journal Heredity, 93(5), 384-385.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/rotate_fcoef.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rotate Fourier shape 180 degrees — rotate_fcoef","text":"","code":"#load shells data, plot the first shape data(\"shells\") shape1 <- shells$shapes$coe[1,] plot(inv_efourier(shape1, 300))   #rotate and plot again shape1_rot <- rotate_fcoef(shape1) plot(inv_efourier(shape1_rot, 300))"},{"path":"https://millacarmona.github.io/morphospace/reference/shapes_mat.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify and arrange shape descriptors — shapes_mat","title":"Identify and arrange shape descriptors — shapes_mat","text":"Identify data type (Fourier coefficients Procrustes shape coordinates) arrange 2-margin matrix format, suitable used input multivariate analysis. Used internally.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/shapes_mat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify and arrange shape descriptors — shapes_mat","text":"","code":"shapes_mat(shapes)"},{"path":"https://millacarmona.github.io/morphospace/reference/shapes_mat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify and arrange shape descriptors — shapes_mat","text":"shapes Shape data.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/shapes_mat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify and arrange shape descriptors — shapes_mat","text":"list length 2 containing: $datype: type geometric morphometrics data. $data2d: shape descriptors arranged 2-margins matrix format.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/shapes_mat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify and arrange shape descriptors — shapes_mat","text":"","code":"#apply on shells dataset data(\"shells\") dat1 <- shapes_mat(shells$shapes)  #inspect results head(dat1$data2d) #>           A1          A2         A3            A4         A5            A6 #> b1'_V76-1  1 0.009847538 0.08337886  0.0039761185 0.02061273 -1.493843e-03 #> b1_A12     1 0.005227513 0.07848772  0.0016269021 0.02297933 -8.905190e-04 #> b2'_SS-1   1 0.018904335 0.05939487  0.0070442907 0.01232883 -4.544465e-04 #> b3'_SS-1   1 0.014621832 0.06036253  0.0077918975 0.01006870  1.105021e-05 #> b3_SS-1    1 0.010326194 0.06160285  0.0063514712 0.01487457 -3.071751e-04 #> b4_SM-1    1 0.008975320 0.06233609 -0.0003651647 0.01547282 -3.668517e-03 #>                    A7 B1          B2            B3          B4            B5 #> b1'_V76-1 0.006759703  0 0.005477003 -0.0004282486 0.007548908  0.0031221174 #> b1_A12    0.007257191  0 0.003898250 -0.0013499495 0.002620121  0.0020050185 #> b2'_SS-1  0.003813116  0 0.012513634 -0.0030524433 0.009411656  0.0010909600 #> b3'_SS-1  0.004184113  0 0.004258217 -0.0004140345 0.009201703  0.0032509225 #> b3_SS-1   0.005676455  0 0.006581695 -0.0037489167 0.008928932 -0.0009955374 #> b4_SM-1   0.005186795  0 0.009181395 -0.0072017359 0.007766999 -0.0012590531 #>                     B6          B7 C1           C2            C3           C4 #> b1'_V76-1  0.003957684 0.004562953  0 -0.023541385 -0.0137809936 -0.006797454 #> b1_A12    -0.000151154 0.003844865  0 -0.003775977 -0.0021316512  0.002401863 #> b2'_SS-1   0.002831598 0.004416039  0 -0.021876723  0.0002256957  0.001371427 #> b3'_SS-1   0.005464510 0.003906159  0 -0.013090925 -0.0086135709 -0.009156263 #> b3_SS-1    0.006066773 0.003039227  0 -0.012581691  0.0006289140 -0.005505342 #> b4_SM-1    0.002473577 0.004066889  0 -0.007252402  0.0069228496 -0.002269362 #>                     C5           C6            C7         D1         D2 #> b1'_V76-1 -0.007410706 0.0036610861 -0.0021926533 -0.4865601 0.04072481 #> b1_A12    -0.006741918 0.0009087822 -0.0007208580 -0.5584802 0.01815055 #> b2'_SS-1  -0.007516363 0.0055458164 -0.0010375766 -0.6637269 0.03425628 #> b3'_SS-1  -0.002344967 0.0047095837 -0.0002979632 -0.6123409 0.03615464 #> b3_SS-1   -0.004058954 0.0030298986 -0.0042394265 -0.6378733 0.02436445 #> b4_SM-1   -0.009670589 0.0061847940 -0.0034557927 -0.6374301 0.01343262 #>                    D3           D4           D5            D6            D7 #> b1'_V76-1 -0.05334240 -0.018620903 -0.016711541 -0.0018302451 -0.0101989230 #> b1_A12    -0.03919417 -0.009443359 -0.013480105  0.0021323640 -0.0075179404 #> b2'_SS-1  -0.04771922 -0.017937411 -0.005135133  0.0001936624 -0.0070389526 #> b3'_SS-1  -0.06635582 -0.013844481 -0.002831830 -0.0029792588 -0.0005790466 #> b3_SS-1   -0.04477262 -0.007091290 -0.005358318 -0.0025769483 -0.0025821962 #> b4_SM-1   -0.04797558 -0.013992735 -0.004527085  0.0032399782 -0.0054770544 dat1$datype #> [1] \"fcoef\"  #aply on tails dataset data(\"tails\") dat2 <- shapes_mat(tails$shapes)  #inspect results head(dat2$data2d) #>        [,1]        [,2]      [,3]       [,4]      [,5]        [,6]      [,7] #> 1 0.3086977 -0.06602077 0.3086977 0.06602080 0.2657952 -0.07281554 0.2657952 #> 2 0.3022522 -0.06086812 0.3022522 0.06086816 0.2628490 -0.06628239 0.2628490 #> 3 0.3174438 -0.06501373 0.3174437 0.06501377 0.2746603 -0.07049607 0.2746603 #> 4 0.3235606 -0.06498776 0.3235606 0.06498779 0.2800004 -0.07368902 0.2800004 #> 5 0.3226869 -0.07235632 0.3226869 0.07235635 0.2743744 -0.08160505 0.2743744 #> 6 0.3016127 -0.06416951 0.3016127 0.06416954 0.2599461 -0.06984898 0.2599461 #>         [,8]       [,9]      [,10]      [,11]      [,12]         [,13] #> 1 0.07281557 -0.4314970 -0.3981329 -0.1431885 -0.1804893  0.0003851696 #> 2 0.06628242 -0.4172909 -0.4256825 -0.1353013 -0.1713835 -0.0250179246 #> 3 0.07049610 -0.4487546 -0.3770543 -0.1329245 -0.1732373 -0.0208498079 #> 4 0.07368904 -0.4443929 -0.3670732 -0.1407361 -0.1624070 -0.0368638304 #> 5 0.08160507 -0.4602320 -0.3545009 -0.1422530 -0.1817729  0.0108474699 #> 6 0.06984900 -0.4111111 -0.4102675 -0.1428489 -0.1957890 -0.0151975144 #>           [,14]      [,15]     [,16]      [,17]     [,18] #> 1 -2.906798e-08 -0.1431885 0.1804893 -0.4314970 0.3981329 #> 2 -2.539334e-08 -0.1353014 0.1713834 -0.4172910 0.4256825 #> 3 -3.002987e-08 -0.1329245 0.1732372 -0.4487547 0.3770543 #> 4 -2.442124e-08 -0.1407362 0.1624070 -0.4443930 0.3670733 #> 5 -3.931407e-08 -0.1422530 0.1817729 -0.4602320 0.3545009 #> 6 -2.052660e-08 -0.1428490 0.1957889 -0.4111111 0.4102675 dat2$datype #> [1] \"landm\""},{"path":"https://millacarmona.github.io/morphospace/reference/shells.html","id":null,"dir":"Reference","previous_headings":"","what":"Ptychomya shell outlines data set — shells","title":"Ptychomya shell outlines data set — shells","text":"Sample intra- interspecific shell shapes, quantified closed outlines using 7 harmonics elliptic Fourier analysis, 4 species extinct genus Ptychomya (Bivalvia: Crassatellidae).","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/shells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ptychomya shell outlines data set — shells","text":"","code":"shells"},{"path":"https://millacarmona.github.io/morphospace/reference/shells.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Ptychomya shell outlines data set — shells","text":"list containing: $shapes: \"OutCoe\" object containing 137 x 28 matrix normalized Fourier coefficients describing outline shell specimen left lateral view. $sizes: vector length 137 containing centroid size fossil shell. $data: 4-column data frame information taxonomic classification, ammonoid biozone, estimated geochronologic age (million years), geographic provenance fossil shell.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/shells.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Ptychomya shell outlines data set — shells","text":"shells data contain data 137 specimens belonging 4 species extinct bivalve genus Ptychomya, tracking morphological changes 5 million years interval Lower Cretaceous west-central Argentina (approximately 140 million years ago). data set includes information extrernal shell shape (measured using Fourier coefficients 7 harmonics), centroid size, age (relative, taken ammonoid biozones, absolute, estimated using combination former, absolute dates, stratigraphic data), geographic provenance, taxonomic classification fossil specimen.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/shells.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Ptychomya shell outlines data set — shells","text":"Milla Carmona, P. S., Lazo, D. G., & Soto, . M. (2018). Morphological evolution bivalve Ptychomya Lower Cretaceous Argentina. Paleobiology, 44(1), 101-117.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/shells3D.html","id":null,"dir":"Reference","previous_headings":"","what":"Steinmanella shell surfaces data set — shells3D","title":"Steinmanella shell surfaces data set — shells3D","text":"Sample ontogenetic longitudinal shell shapes, quantified using 90 surface semilandmarks, 7 species extinct genus Steinmanella (Bivalvia: Trigoniida).","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/shells3D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Steinmanella shell surfaces data set — shells3D","text":"","code":"shells3D"},{"path":"https://millacarmona.github.io/morphospace/reference/shells3D.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Steinmanella shell surfaces data set — shells3D","text":"list containing: $shapes: 90 x 3 x 278 array slid, superimposed configurations semilandmarks describing surfaces representing right valves (3-5 per specimen). $sizes: vector length 278 containing centroid size shell surface $data: 4-column data frame information individual id, taxonomic classification, amonoid biozone geographic provenance shell surface. $mesh_meanspec: 3D surface mesh stored \"mesh3d\" object (rgl) corresponding shell shape closest sample's mean (found using geomorph::findMeanSpec()), warped using TPS interpolation.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/shells3D.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Steinmanella shell surfaces data set — shells3D","text":"shells3D data contain data 67 specimens belonging 7 species extinct bivalve genus Steinmanella, inhabited Early Cretaceous west-central Argentina ~7 million years interval. Shapes measured individual using growth lines marking form animal different ages, making total 278 shell surfaces describing intra- interspecfic ontogenetic variation. data includes semilandmarks describing surfaces' shapes (digitally processed maximize signal), centroid sizes, individual belong, well relative age (ammonoid biozones), geographic provenance, taxonomic classification. order improve visualization, surface mesh specimen closest consensus sample, warped using TPS interpoltation, also included.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/shells3D.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Steinmanella shell surfaces data set — shells3D","text":"Milla Carmona, P. S., Lazo, D. G., & Soto, . M. (2021). Ontogeny steinmanellines (Bivalvia: Trigoniida): intra- interspecific appraisal using Early Cretaceous faunas Neuquén Basin case study. Paleobiology, press.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/svd_block.html","id":null,"dir":"Reference","previous_headings":"","what":"Singular value decomposition for 2 blocks of variables — svd_block","title":"Singular value decomposition for 2 blocks of variables — svd_block","text":"Just wrapper svd() returns adequate output used blocks variables. Can deal phylogenetic data using ape phytools functions. Used internally.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/svd_block.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Singular value decomposition for 2 blocks of variables — svd_block","text":"","code":"svd_block(x, y, tree = NULL)"},{"path":"https://millacarmona.github.io/morphospace/reference/svd_block.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Singular value decomposition for 2 blocks of variables — svd_block","text":"x First block variables y Second block variables tree optional \"phy\" object containing phylogenetic tree whose tip.labels match rownames x y.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/svd_block.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Singular value decomposition for 2 blocks of variables — svd_block","text":"Mimics svd() output.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/svd_block.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Singular value decomposition for 2 blocks of variables — svd_block","text":"","code":"#laod data and packages library(geomorph)  data(\"tails\") shapes <- tails$shapes sizes <- tails$sizes species <- tails$data$species tree <- tails$tree sp_shapes <- consensus(shapes, species)[,,tree$tip.label] sp_sizes <- cbind(tapply(sizes, species, mean))[tree$tip.label,]  #perform partial svd svd_block(x = sizes, y = two.d.array(shapes)) #> $d #> [1] 42.92575 #>  #> $v #>                [,1] #>  [1,] -5.613140e-02 #>  [2,]  1.220262e-01 #>  [3,] -5.613140e-02 #>  [4,] -1.220262e-01 #>  [5,]  2.042085e-02 #>  [6,]  1.341861e-01 #>  [7,]  2.042085e-02 #>  [8,] -1.341861e-01 #>  [9,] -4.132683e-01 #> [10,] -1.266548e-01 #> [11,]  8.369095e-02 #> [12,]  5.318992e-02 #> [13,]  7.305758e-01 #> [14,] -1.136551e-08 #> [15,]  8.369094e-02 #> [16,] -5.318994e-02 #> [17,] -4.132683e-01 #> [18,]  1.266548e-01 #>  #> $u #>      [,1] #> [1,]    1 #>   #perform partial svd on phylogenetic structure svd_block(x = sp_sizes, y = two.d.array(sp_shapes), tree = tree) #> $d #> [1] 17.05874 #>  #> $v #>                [,1] #>  [1,] -7.089075e-02 #>  [2,]  1.199741e-01 #>  [3,] -7.089075e-02 #>  [4,] -1.199741e-01 #>  [5,]  1.607633e-03 #>  [6,]  1.287336e-01 #>  [7,]  1.607636e-03 #>  [8,] -1.287336e-01 #>  [9,] -3.125015e-01 #> [10,] -1.063445e-01 #> [11,] -3.778528e-02 #> [12,] -3.916476e-02 #> [13,]  8.391398e-01 #> [14,]  1.094144e-08 #> [15,] -3.778528e-02 #> [16,]  3.916475e-02 #> [17,] -3.125015e-01 #> [18,]  1.063445e-01 #>  #> $u #>      [,1] #> [1,]    1 #>"},{"path":"https://millacarmona.github.io/morphospace/reference/tails.html","id":null,"dir":"Reference","previous_headings":"","what":"Tyrannus tail shape data set — tails","title":"Tyrannus tail shape data set — tails","text":"Sample intra- interspecific tail shapes, quntified using 9 landmarks, 13 species genus Tyrannus (Aves: Tyrannidae).","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/tails.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tyrannus tail shape data set — tails","text":"","code":"tails"},{"path":"https://millacarmona.github.io/morphospace/reference/tails.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Tyrannus tail shape data set — tails","text":"list containing: $shapes: 9 x 2 x 281 array symmetric component superimposed configurations landmarks marking base tail, well tips two outermost rectrices specimen. $sizes: vector length 281 containing centroid size specimen's tail. $data: 3-column data frame information taxonomic classification, sex type (deep forked, DF non-deep forked, NDF. $tree: \"phy\" object containing phylogenetic tree 13 Tyrannus species. $links: list indicating connect landmarks create wireframe.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/tails.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tyrannus tail shape data set — tails","text":"data set contains sample tail shapes 13 species genus Tyrannus, two (T. savana T. forficatus) display exaggeratedly elongated tails, well considerable allometric variation sexual dimorphism. tails data set  contains landmark data centroid sizes tails 281 specimens, classification species sex, phylogenetic relationships Tyrannus species (see Fasanelli et al. 2022 references therein). help visualization shapes, links landmarks also included.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/tails.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Tyrannus tail shape data set — tails","text":"Fasanelli M. N., Milla Carmona P. S., Soto . M., & Tuero, D.T . (2022). Allometry, sexual selection evolutionary lines least resistance shaped evolution exaggerated sexual traits within genus Tyrannus. Journal Evolutionary Biology, 35(5), 669 - 679.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/wings.html","id":null,"dir":"Reference","previous_headings":"","what":"Drosophila wing shape data set — wings","title":"Drosophila wing shape data set — wings","text":"Sample intra- interspecific wing shapes, quntified using 9 landmarks, two species cactophilic Drosophila (Diptera: Drosophilidae).","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/wings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drosophila wing shape data set — wings","text":"","code":"wings"},{"path":"https://millacarmona.github.io/morphospace/reference/wings.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Drosophila wing shape data set — wings","text":"list containing: $shapes: 9 x 2 x 263 array superimposed configurations landmarks marking veins intersections right wing specimen. $sizes: vector length 263 containing centroid size specimen's wing. $data: 3-column data frame information taxonomic classification, host cactus, sex, line replica specimen. $links: list indicating connect landmarks create wireframe. $template: 2-column matrix containing coordinates 9 landmarks, followed coordinates defining 9 curves curve describing wing morphology, warped using TPS interpolation.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/wings.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Drosophila wing shape data set — wings","text":"data set includes wing shape data 263 experimentally bred specimens belonging two recently diverged cactophilic Drosophila species, D. koepferae D. buzzattii northwestern Argentina. two species show preference different host cacti (columnar cacti genus Trichocereus prickly pears genus Opuntia, respectively) considered morphologically cryptic (usually, can recognized genital morphology). Accompanying data include centroid size wing, well information host cacti specimen bred, species, sex, isofemale line, replica. Also included template containing series curves describing wing outline veins (created using build_template2d), warped using TPS interpolation.","code":""},{"path":"https://millacarmona.github.io/morphospace/reference/wings.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Drosophila wing shape data set — wings","text":"Soto, E. M., Goenaga, J., Hurtado, J. P., & Hasson, E. (2012). Oviposition performance natural hosts cactophilic Drosophila. Evolutionary Ecology, 26(4), 975-990.","code":""}]
